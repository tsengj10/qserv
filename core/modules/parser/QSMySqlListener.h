// -*- LSST-C++ -*-
/*
 * LSST Data Management System
 * Copyright 2018 LSST Corporation.
 *
 * This product includes software developed by the
 * LSST Project (http://www.lsst.org/).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the LSST License Statement and
 * the GNU General Public License along with this program.  If not,
 * see <http://www.lsstcorp.org/LegalNotices/>.
 */
#ifndef LSST_QSERV_PARSER_MYSQLLISTENER_H
#define LSST_QSERV_PARSER_MYSQLLISTENER_H

#include <memory>
#include <stack>

#include "parser/QSMySqlParser.h" // included for contexts. They *could* be forward declared.
#include "parser/QSMySqlParserBaseListener.h"


namespace antlr4 {
class ParserRuleContext;
}

namespace lsst {
namespace qserv {
namespace query{
    class SelectStmt;
}
namespace parser {

class Adapter;
class RootAdapter;

class QSMySqlListener : public QSMySqlParserListener {
public:
    QSMySqlListener();
    virtual ~QSMySqlListener() {}

    // accessors for query types that may have been generated by this listener
    std::shared_ptr<query::SelectStmt> getSelectStatement() const;

    // This may be raised during listening if there is an error in the enter/exit functions. It may happen
    // because an unanticipated SQL statement was entered into qserv and we don't yet have the proper
    // handling for it set up yet.
    // Any code that calls `listen` on this function should catch this exception, log the `what` message,
    // and return as though no query was entered.
    class adapter_order_error : public std::runtime_error {
    public:
        explicit adapter_order_error(const std::string& msg)
        : std::runtime_error(msg) {}
    };

    // Thrown in the case of unexpected events during the parse. (might want to inherit from runtime error?)
    class adapter_execution_error : public std::runtime_error {
    public:
        explicit adapter_execution_error(std::string msg)
        : std::runtime_error(msg) {}
    };

protected:

    virtual void enterRoot(QSMySqlParser::RootContext * /*ctx*/) override;
    virtual void exitRoot(QSMySqlParser::RootContext * /*ctx*/) override;

    virtual void enterSqlStatements(QSMySqlParser::SqlStatementsContext * /*ctx*/) override;
    virtual void exitSqlStatements(QSMySqlParser::SqlStatementsContext * /*ctx*/) override;

    virtual void enterSqlStatement(QSMySqlParser::SqlStatementContext * /*ctx*/) override;
    virtual void exitSqlStatement(QSMySqlParser::SqlStatementContext * /*ctx*/) override;

    virtual void enterEmptyStatement(QSMySqlParser::EmptyStatementContext * /*ctx*/) override;
    virtual void exitEmptyStatement(QSMySqlParser::EmptyStatementContext * /*ctx*/) override;

    virtual void enterDdlStatement(QSMySqlParser::DdlStatementContext * /*ctx*/) override;
    virtual void exitDdlStatement(QSMySqlParser::DdlStatementContext * /*ctx*/) override;

    virtual void enterDmlStatement(QSMySqlParser::DmlStatementContext * /*ctx*/) override;
    virtual void exitDmlStatement(QSMySqlParser::DmlStatementContext * /*ctx*/) override;

    virtual void enterTransactionStatement(QSMySqlParser::TransactionStatementContext * /*ctx*/) override;
    virtual void exitTransactionStatement(QSMySqlParser::TransactionStatementContext * /*ctx*/) override;

    virtual void enterReplicationStatement(QSMySqlParser::ReplicationStatementContext * /*ctx*/) override;
    virtual void exitReplicationStatement(QSMySqlParser::ReplicationStatementContext * /*ctx*/) override;

    virtual void enterPreparedStatement(QSMySqlParser::PreparedStatementContext * /*ctx*/) override;
    virtual void exitPreparedStatement(QSMySqlParser::PreparedStatementContext * /*ctx*/) override;

    virtual void enterCompoundStatement(QSMySqlParser::CompoundStatementContext * /*ctx*/) override;
    virtual void exitCompoundStatement(QSMySqlParser::CompoundStatementContext * /*ctx*/) override;

    virtual void enterAdministrationStatement(QSMySqlParser::AdministrationStatementContext * /*ctx*/) override;
    virtual void exitAdministrationStatement(QSMySqlParser::AdministrationStatementContext * /*ctx*/) override;

    virtual void enterUtilityStatement(QSMySqlParser::UtilityStatementContext * /*ctx*/) override;
    virtual void exitUtilityStatement(QSMySqlParser::UtilityStatementContext * /*ctx*/) override;

    virtual void enterCreateDatabase(QSMySqlParser::CreateDatabaseContext * /*ctx*/) override;
    virtual void exitCreateDatabase(QSMySqlParser::CreateDatabaseContext * /*ctx*/) override;

    virtual void enterCreateEvent(QSMySqlParser::CreateEventContext * /*ctx*/) override;
    virtual void exitCreateEvent(QSMySqlParser::CreateEventContext * /*ctx*/) override;

    virtual void enterCreateIndex(QSMySqlParser::CreateIndexContext * /*ctx*/) override;
    virtual void exitCreateIndex(QSMySqlParser::CreateIndexContext * /*ctx*/) override;

    virtual void enterCreateLogfileGroup(QSMySqlParser::CreateLogfileGroupContext * /*ctx*/) override;
    virtual void exitCreateLogfileGroup(QSMySqlParser::CreateLogfileGroupContext * /*ctx*/) override;

    virtual void enterCreateProcedure(QSMySqlParser::CreateProcedureContext * /*ctx*/) override;
    virtual void exitCreateProcedure(QSMySqlParser::CreateProcedureContext * /*ctx*/) override;

    virtual void enterCreateFunction(QSMySqlParser::CreateFunctionContext * /*ctx*/) override;
    virtual void exitCreateFunction(QSMySqlParser::CreateFunctionContext * /*ctx*/) override;

    virtual void enterCreateServer(QSMySqlParser::CreateServerContext * /*ctx*/) override;
    virtual void exitCreateServer(QSMySqlParser::CreateServerContext * /*ctx*/) override;

    virtual void enterCopyCreateTable(QSMySqlParser::CopyCreateTableContext * /*ctx*/) override;
    virtual void exitCopyCreateTable(QSMySqlParser::CopyCreateTableContext * /*ctx*/) override;

    virtual void enterQueryCreateTable(QSMySqlParser::QueryCreateTableContext * /*ctx*/) override;
    virtual void exitQueryCreateTable(QSMySqlParser::QueryCreateTableContext * /*ctx*/) override;

    virtual void enterColumnCreateTable(QSMySqlParser::ColumnCreateTableContext * /*ctx*/) override;
    virtual void exitColumnCreateTable(QSMySqlParser::ColumnCreateTableContext * /*ctx*/) override;

    virtual void enterCreateTablespaceInnodb(QSMySqlParser::CreateTablespaceInnodbContext * /*ctx*/) override;
    virtual void exitCreateTablespaceInnodb(QSMySqlParser::CreateTablespaceInnodbContext * /*ctx*/) override;

    virtual void enterCreateTablespaceNdb(QSMySqlParser::CreateTablespaceNdbContext * /*ctx*/) override;
    virtual void exitCreateTablespaceNdb(QSMySqlParser::CreateTablespaceNdbContext * /*ctx*/) override;

    virtual void enterCreateTrigger(QSMySqlParser::CreateTriggerContext * /*ctx*/) override;
    virtual void exitCreateTrigger(QSMySqlParser::CreateTriggerContext * /*ctx*/) override;

    virtual void enterCreateView(QSMySqlParser::CreateViewContext * /*ctx*/) override;
    virtual void exitCreateView(QSMySqlParser::CreateViewContext * /*ctx*/) override;

    virtual void enterCreateDatabaseOption(QSMySqlParser::CreateDatabaseOptionContext * /*ctx*/) override;
    virtual void exitCreateDatabaseOption(QSMySqlParser::CreateDatabaseOptionContext * /*ctx*/) override;

    virtual void enterOwnerStatement(QSMySqlParser::OwnerStatementContext * /*ctx*/) override;
    virtual void exitOwnerStatement(QSMySqlParser::OwnerStatementContext * /*ctx*/) override;

    virtual void enterPreciseSchedule(QSMySqlParser::PreciseScheduleContext * /*ctx*/) override;
    virtual void exitPreciseSchedule(QSMySqlParser::PreciseScheduleContext * /*ctx*/) override;

    virtual void enterIntervalSchedule(QSMySqlParser::IntervalScheduleContext * /*ctx*/) override;
    virtual void exitIntervalSchedule(QSMySqlParser::IntervalScheduleContext * /*ctx*/) override;

    virtual void enterTimestampValue(QSMySqlParser::TimestampValueContext * /*ctx*/) override;
    virtual void exitTimestampValue(QSMySqlParser::TimestampValueContext * /*ctx*/) override;

    virtual void enterIntervalExpr(QSMySqlParser::IntervalExprContext * /*ctx*/) override;
    virtual void exitIntervalExpr(QSMySqlParser::IntervalExprContext * /*ctx*/) override;

    virtual void enterIntervalType(QSMySqlParser::IntervalTypeContext * /*ctx*/) override;
    virtual void exitIntervalType(QSMySqlParser::IntervalTypeContext * /*ctx*/) override;

    virtual void enterEnableType(QSMySqlParser::EnableTypeContext * /*ctx*/) override;
    virtual void exitEnableType(QSMySqlParser::EnableTypeContext * /*ctx*/) override;

    virtual void enterIndexType(QSMySqlParser::IndexTypeContext * /*ctx*/) override;
    virtual void exitIndexType(QSMySqlParser::IndexTypeContext * /*ctx*/) override;

    virtual void enterIndexOption(QSMySqlParser::IndexOptionContext * /*ctx*/) override;
    virtual void exitIndexOption(QSMySqlParser::IndexOptionContext * /*ctx*/) override;

    virtual void enterProcedureParameter(QSMySqlParser::ProcedureParameterContext * /*ctx*/) override;
    virtual void exitProcedureParameter(QSMySqlParser::ProcedureParameterContext * /*ctx*/) override;

    virtual void enterFunctionParameter(QSMySqlParser::FunctionParameterContext * /*ctx*/) override;
    virtual void exitFunctionParameter(QSMySqlParser::FunctionParameterContext * /*ctx*/) override;

    virtual void enterRoutineComment(QSMySqlParser::RoutineCommentContext * /*ctx*/) override;
    virtual void exitRoutineComment(QSMySqlParser::RoutineCommentContext * /*ctx*/) override;

    virtual void enterRoutineLanguage(QSMySqlParser::RoutineLanguageContext * /*ctx*/) override;
    virtual void exitRoutineLanguage(QSMySqlParser::RoutineLanguageContext * /*ctx*/) override;

    virtual void enterRoutineBehavior(QSMySqlParser::RoutineBehaviorContext * /*ctx*/) override;
    virtual void exitRoutineBehavior(QSMySqlParser::RoutineBehaviorContext * /*ctx*/) override;

    virtual void enterRoutineData(QSMySqlParser::RoutineDataContext * /*ctx*/) override;
    virtual void exitRoutineData(QSMySqlParser::RoutineDataContext * /*ctx*/) override;

    virtual void enterRoutineSecurity(QSMySqlParser::RoutineSecurityContext * /*ctx*/) override;
    virtual void exitRoutineSecurity(QSMySqlParser::RoutineSecurityContext * /*ctx*/) override;

    virtual void enterServerOption(QSMySqlParser::ServerOptionContext * /*ctx*/) override;
    virtual void exitServerOption(QSMySqlParser::ServerOptionContext * /*ctx*/) override;

    virtual void enterCreateDefinitions(QSMySqlParser::CreateDefinitionsContext * /*ctx*/) override;
    virtual void exitCreateDefinitions(QSMySqlParser::CreateDefinitionsContext * /*ctx*/) override;

    virtual void enterColumnDeclaration(QSMySqlParser::ColumnDeclarationContext * /*ctx*/) override;
    virtual void exitColumnDeclaration(QSMySqlParser::ColumnDeclarationContext * /*ctx*/) override;

    virtual void enterConstraintDeclaration(QSMySqlParser::ConstraintDeclarationContext * /*ctx*/) override;
    virtual void exitConstraintDeclaration(QSMySqlParser::ConstraintDeclarationContext * /*ctx*/) override;

    virtual void enterIndexDeclaration(QSMySqlParser::IndexDeclarationContext * /*ctx*/) override;
    virtual void exitIndexDeclaration(QSMySqlParser::IndexDeclarationContext * /*ctx*/) override;

    virtual void enterColumnDefinition(QSMySqlParser::ColumnDefinitionContext * /*ctx*/) override;
    virtual void exitColumnDefinition(QSMySqlParser::ColumnDefinitionContext * /*ctx*/) override;

    virtual void enterNullColumnConstraint(QSMySqlParser::NullColumnConstraintContext * /*ctx*/) override;
    virtual void exitNullColumnConstraint(QSMySqlParser::NullColumnConstraintContext * /*ctx*/) override;

    virtual void enterDefaultColumnConstraint(QSMySqlParser::DefaultColumnConstraintContext * /*ctx*/) override;
    virtual void exitDefaultColumnConstraint(QSMySqlParser::DefaultColumnConstraintContext * /*ctx*/) override;

    virtual void enterAutoIncrementColumnConstraint(QSMySqlParser::AutoIncrementColumnConstraintContext * /*ctx*/) override;
    virtual void exitAutoIncrementColumnConstraint(QSMySqlParser::AutoIncrementColumnConstraintContext * /*ctx*/) override;

    virtual void enterPrimaryKeyColumnConstraint(QSMySqlParser::PrimaryKeyColumnConstraintContext * /*ctx*/) override;
    virtual void exitPrimaryKeyColumnConstraint(QSMySqlParser::PrimaryKeyColumnConstraintContext * /*ctx*/) override;

    virtual void enterUniqueKeyColumnConstraint(QSMySqlParser::UniqueKeyColumnConstraintContext * /*ctx*/) override;
    virtual void exitUniqueKeyColumnConstraint(QSMySqlParser::UniqueKeyColumnConstraintContext * /*ctx*/) override;

    virtual void enterCommentColumnConstraint(QSMySqlParser::CommentColumnConstraintContext * /*ctx*/) override;
    virtual void exitCommentColumnConstraint(QSMySqlParser::CommentColumnConstraintContext * /*ctx*/) override;

    virtual void enterFormatColumnConstraint(QSMySqlParser::FormatColumnConstraintContext * /*ctx*/) override;
    virtual void exitFormatColumnConstraint(QSMySqlParser::FormatColumnConstraintContext * /*ctx*/) override;

    virtual void enterStorageColumnConstraint(QSMySqlParser::StorageColumnConstraintContext * /*ctx*/) override;
    virtual void exitStorageColumnConstraint(QSMySqlParser::StorageColumnConstraintContext * /*ctx*/) override;

    virtual void enterReferenceColumnConstraint(QSMySqlParser::ReferenceColumnConstraintContext * /*ctx*/) override;
    virtual void exitReferenceColumnConstraint(QSMySqlParser::ReferenceColumnConstraintContext * /*ctx*/) override;

    virtual void enterPrimaryKeyTableConstraint(QSMySqlParser::PrimaryKeyTableConstraintContext * /*ctx*/) override;
    virtual void exitPrimaryKeyTableConstraint(QSMySqlParser::PrimaryKeyTableConstraintContext * /*ctx*/) override;

    virtual void enterUniqueKeyTableConstraint(QSMySqlParser::UniqueKeyTableConstraintContext * /*ctx*/) override;
    virtual void exitUniqueKeyTableConstraint(QSMySqlParser::UniqueKeyTableConstraintContext * /*ctx*/) override;

    virtual void enterForeignKeyTableConstraint(QSMySqlParser::ForeignKeyTableConstraintContext * /*ctx*/) override;
    virtual void exitForeignKeyTableConstraint(QSMySqlParser::ForeignKeyTableConstraintContext * /*ctx*/) override;

    virtual void enterCheckTableConstraint(QSMySqlParser::CheckTableConstraintContext * /*ctx*/) override;
    virtual void exitCheckTableConstraint(QSMySqlParser::CheckTableConstraintContext * /*ctx*/) override;

    virtual void enterReferenceDefinition(QSMySqlParser::ReferenceDefinitionContext * /*ctx*/) override;
    virtual void exitReferenceDefinition(QSMySqlParser::ReferenceDefinitionContext * /*ctx*/) override;

    virtual void enterReferenceAction(QSMySqlParser::ReferenceActionContext * /*ctx*/) override;
    virtual void exitReferenceAction(QSMySqlParser::ReferenceActionContext * /*ctx*/) override;

    virtual void enterReferenceControlType(QSMySqlParser::ReferenceControlTypeContext * /*ctx*/) override;
    virtual void exitReferenceControlType(QSMySqlParser::ReferenceControlTypeContext * /*ctx*/) override;

    virtual void enterSimpleIndexDeclaration(QSMySqlParser::SimpleIndexDeclarationContext * /*ctx*/) override;
    virtual void exitSimpleIndexDeclaration(QSMySqlParser::SimpleIndexDeclarationContext * /*ctx*/) override;

    virtual void enterSpecialIndexDeclaration(QSMySqlParser::SpecialIndexDeclarationContext * /*ctx*/) override;
    virtual void exitSpecialIndexDeclaration(QSMySqlParser::SpecialIndexDeclarationContext * /*ctx*/) override;

    virtual void enterTableOptionEngine(QSMySqlParser::TableOptionEngineContext * /*ctx*/) override;
    virtual void exitTableOptionEngine(QSMySqlParser::TableOptionEngineContext * /*ctx*/) override;

    virtual void enterTableOptionAutoIncrement(QSMySqlParser::TableOptionAutoIncrementContext * /*ctx*/) override;
    virtual void exitTableOptionAutoIncrement(QSMySqlParser::TableOptionAutoIncrementContext * /*ctx*/) override;

    virtual void enterTableOptionAverage(QSMySqlParser::TableOptionAverageContext * /*ctx*/) override;
    virtual void exitTableOptionAverage(QSMySqlParser::TableOptionAverageContext * /*ctx*/) override;

    virtual void enterTableOptionCharset(QSMySqlParser::TableOptionCharsetContext * /*ctx*/) override;
    virtual void exitTableOptionCharset(QSMySqlParser::TableOptionCharsetContext * /*ctx*/) override;

    virtual void enterTableOptionChecksum(QSMySqlParser::TableOptionChecksumContext * /*ctx*/) override;
    virtual void exitTableOptionChecksum(QSMySqlParser::TableOptionChecksumContext * /*ctx*/) override;

    virtual void enterTableOptionCollate(QSMySqlParser::TableOptionCollateContext * /*ctx*/) override;
    virtual void exitTableOptionCollate(QSMySqlParser::TableOptionCollateContext * /*ctx*/) override;

    virtual void enterTableOptionComment(QSMySqlParser::TableOptionCommentContext * /*ctx*/) override;
    virtual void exitTableOptionComment(QSMySqlParser::TableOptionCommentContext * /*ctx*/) override;

    virtual void enterTableOptionCompression(QSMySqlParser::TableOptionCompressionContext * /*ctx*/) override;
    virtual void exitTableOptionCompression(QSMySqlParser::TableOptionCompressionContext * /*ctx*/) override;

    virtual void enterTableOptionConnection(QSMySqlParser::TableOptionConnectionContext * /*ctx*/) override;
    virtual void exitTableOptionConnection(QSMySqlParser::TableOptionConnectionContext * /*ctx*/) override;

    virtual void enterTableOptionDataDirectory(QSMySqlParser::TableOptionDataDirectoryContext * /*ctx*/) override;
    virtual void exitTableOptionDataDirectory(QSMySqlParser::TableOptionDataDirectoryContext * /*ctx*/) override;

    virtual void enterTableOptionDelay(QSMySqlParser::TableOptionDelayContext * /*ctx*/) override;
    virtual void exitTableOptionDelay(QSMySqlParser::TableOptionDelayContext * /*ctx*/) override;

    virtual void enterTableOptionEncryption(QSMySqlParser::TableOptionEncryptionContext * /*ctx*/) override;
    virtual void exitTableOptionEncryption(QSMySqlParser::TableOptionEncryptionContext * /*ctx*/) override;

    virtual void enterTableOptionIndexDirectory(QSMySqlParser::TableOptionIndexDirectoryContext * /*ctx*/) override;
    virtual void exitTableOptionIndexDirectory(QSMySqlParser::TableOptionIndexDirectoryContext * /*ctx*/) override;

    virtual void enterTableOptionInsertMethod(QSMySqlParser::TableOptionInsertMethodContext * /*ctx*/) override;
    virtual void exitTableOptionInsertMethod(QSMySqlParser::TableOptionInsertMethodContext * /*ctx*/) override;

    virtual void enterTableOptionKeyBlockSize(QSMySqlParser::TableOptionKeyBlockSizeContext * /*ctx*/) override;
    virtual void exitTableOptionKeyBlockSize(QSMySqlParser::TableOptionKeyBlockSizeContext * /*ctx*/) override;

    virtual void enterTableOptionMaxRows(QSMySqlParser::TableOptionMaxRowsContext * /*ctx*/) override;
    virtual void exitTableOptionMaxRows(QSMySqlParser::TableOptionMaxRowsContext * /*ctx*/) override;

    virtual void enterTableOptionMinRows(QSMySqlParser::TableOptionMinRowsContext * /*ctx*/) override;
    virtual void exitTableOptionMinRows(QSMySqlParser::TableOptionMinRowsContext * /*ctx*/) override;

    virtual void enterTableOptionPackKeys(QSMySqlParser::TableOptionPackKeysContext * /*ctx*/) override;
    virtual void exitTableOptionPackKeys(QSMySqlParser::TableOptionPackKeysContext * /*ctx*/) override;

    virtual void enterTableOptionPassword(QSMySqlParser::TableOptionPasswordContext * /*ctx*/) override;
    virtual void exitTableOptionPassword(QSMySqlParser::TableOptionPasswordContext * /*ctx*/) override;

    virtual void enterTableOptionRowFormat(QSMySqlParser::TableOptionRowFormatContext * /*ctx*/) override;
    virtual void exitTableOptionRowFormat(QSMySqlParser::TableOptionRowFormatContext * /*ctx*/) override;

    virtual void enterTableOptionRecalculation(QSMySqlParser::TableOptionRecalculationContext * /*ctx*/) override;
    virtual void exitTableOptionRecalculation(QSMySqlParser::TableOptionRecalculationContext * /*ctx*/) override;

    virtual void enterTableOptionPersistent(QSMySqlParser::TableOptionPersistentContext * /*ctx*/) override;
    virtual void exitTableOptionPersistent(QSMySqlParser::TableOptionPersistentContext * /*ctx*/) override;

    virtual void enterTableOptionSamplePage(QSMySqlParser::TableOptionSamplePageContext * /*ctx*/) override;
    virtual void exitTableOptionSamplePage(QSMySqlParser::TableOptionSamplePageContext * /*ctx*/) override;

    virtual void enterTableOptionTablespace(QSMySqlParser::TableOptionTablespaceContext * /*ctx*/) override;
    virtual void exitTableOptionTablespace(QSMySqlParser::TableOptionTablespaceContext * /*ctx*/) override;

    virtual void enterTableOptionUnion(QSMySqlParser::TableOptionUnionContext * /*ctx*/) override;
    virtual void exitTableOptionUnion(QSMySqlParser::TableOptionUnionContext * /*ctx*/) override;

    virtual void enterTablespaceStorage(QSMySqlParser::TablespaceStorageContext * /*ctx*/) override;
    virtual void exitTablespaceStorage(QSMySqlParser::TablespaceStorageContext * /*ctx*/) override;

    virtual void enterPartitionDefinitions(QSMySqlParser::PartitionDefinitionsContext * /*ctx*/) override;
    virtual void exitPartitionDefinitions(QSMySqlParser::PartitionDefinitionsContext * /*ctx*/) override;

    virtual void enterPartitionFunctionHash(QSMySqlParser::PartitionFunctionHashContext * /*ctx*/) override;
    virtual void exitPartitionFunctionHash(QSMySqlParser::PartitionFunctionHashContext * /*ctx*/) override;

    virtual void enterPartitionFunctionKey(QSMySqlParser::PartitionFunctionKeyContext * /*ctx*/) override;
    virtual void exitPartitionFunctionKey(QSMySqlParser::PartitionFunctionKeyContext * /*ctx*/) override;

    virtual void enterPartitionFunctionRange(QSMySqlParser::PartitionFunctionRangeContext * /*ctx*/) override;
    virtual void exitPartitionFunctionRange(QSMySqlParser::PartitionFunctionRangeContext * /*ctx*/) override;

    virtual void enterPartitionFunctionList(QSMySqlParser::PartitionFunctionListContext * /*ctx*/) override;
    virtual void exitPartitionFunctionList(QSMySqlParser::PartitionFunctionListContext * /*ctx*/) override;

    virtual void enterSubPartitionFunctionHash(QSMySqlParser::SubPartitionFunctionHashContext * /*ctx*/) override;
    virtual void exitSubPartitionFunctionHash(QSMySqlParser::SubPartitionFunctionHashContext * /*ctx*/) override;

    virtual void enterSubPartitionFunctionKey(QSMySqlParser::SubPartitionFunctionKeyContext * /*ctx*/) override;
    virtual void exitSubPartitionFunctionKey(QSMySqlParser::SubPartitionFunctionKeyContext * /*ctx*/) override;

    virtual void enterPartitionComparision(QSMySqlParser::PartitionComparisionContext * /*ctx*/) override;
    virtual void exitPartitionComparision(QSMySqlParser::PartitionComparisionContext * /*ctx*/) override;

    virtual void enterPartitionListAtom(QSMySqlParser::PartitionListAtomContext * /*ctx*/) override;
    virtual void exitPartitionListAtom(QSMySqlParser::PartitionListAtomContext * /*ctx*/) override;

    virtual void enterPartitionListVector(QSMySqlParser::PartitionListVectorContext * /*ctx*/) override;
    virtual void exitPartitionListVector(QSMySqlParser::PartitionListVectorContext * /*ctx*/) override;

    virtual void enterPartitionSimple(QSMySqlParser::PartitionSimpleContext * /*ctx*/) override;
    virtual void exitPartitionSimple(QSMySqlParser::PartitionSimpleContext * /*ctx*/) override;

    virtual void enterPartitionDefinerAtom(QSMySqlParser::PartitionDefinerAtomContext * /*ctx*/) override;
    virtual void exitPartitionDefinerAtom(QSMySqlParser::PartitionDefinerAtomContext * /*ctx*/) override;

    virtual void enterPartitionDefinerVector(QSMySqlParser::PartitionDefinerVectorContext * /*ctx*/) override;
    virtual void exitPartitionDefinerVector(QSMySqlParser::PartitionDefinerVectorContext * /*ctx*/) override;

    virtual void enterSubpartitionDefinition(QSMySqlParser::SubpartitionDefinitionContext * /*ctx*/) override;
    virtual void exitSubpartitionDefinition(QSMySqlParser::SubpartitionDefinitionContext * /*ctx*/) override;

    virtual void enterPartitionOptionEngine(QSMySqlParser::PartitionOptionEngineContext * /*ctx*/) override;
    virtual void exitPartitionOptionEngine(QSMySqlParser::PartitionOptionEngineContext * /*ctx*/) override;

    virtual void enterPartitionOptionComment(QSMySqlParser::PartitionOptionCommentContext * /*ctx*/) override;
    virtual void exitPartitionOptionComment(QSMySqlParser::PartitionOptionCommentContext * /*ctx*/) override;

    virtual void enterPartitionOptionDataDirectory(QSMySqlParser::PartitionOptionDataDirectoryContext * /*ctx*/) override;
    virtual void exitPartitionOptionDataDirectory(QSMySqlParser::PartitionOptionDataDirectoryContext * /*ctx*/) override;

    virtual void enterPartitionOptionIndexDirectory(QSMySqlParser::PartitionOptionIndexDirectoryContext * /*ctx*/) override;
    virtual void exitPartitionOptionIndexDirectory(QSMySqlParser::PartitionOptionIndexDirectoryContext * /*ctx*/) override;

    virtual void enterPartitionOptionMaxRows(QSMySqlParser::PartitionOptionMaxRowsContext * /*ctx*/) override;
    virtual void exitPartitionOptionMaxRows(QSMySqlParser::PartitionOptionMaxRowsContext * /*ctx*/) override;

    virtual void enterPartitionOptionMinRows(QSMySqlParser::PartitionOptionMinRowsContext * /*ctx*/) override;
    virtual void exitPartitionOptionMinRows(QSMySqlParser::PartitionOptionMinRowsContext * /*ctx*/) override;

    virtual void enterPartitionOptionTablespace(QSMySqlParser::PartitionOptionTablespaceContext * /*ctx*/) override;
    virtual void exitPartitionOptionTablespace(QSMySqlParser::PartitionOptionTablespaceContext * /*ctx*/) override;

    virtual void enterPartitionOptionNodeGroup(QSMySqlParser::PartitionOptionNodeGroupContext * /*ctx*/) override;
    virtual void exitPartitionOptionNodeGroup(QSMySqlParser::PartitionOptionNodeGroupContext * /*ctx*/) override;

    virtual void enterAlterSimpleDatabase(QSMySqlParser::AlterSimpleDatabaseContext * /*ctx*/) override;
    virtual void exitAlterSimpleDatabase(QSMySqlParser::AlterSimpleDatabaseContext * /*ctx*/) override;

    virtual void enterAlterUpgradeName(QSMySqlParser::AlterUpgradeNameContext * /*ctx*/) override;
    virtual void exitAlterUpgradeName(QSMySqlParser::AlterUpgradeNameContext * /*ctx*/) override;

    virtual void enterAlterEvent(QSMySqlParser::AlterEventContext * /*ctx*/) override;
    virtual void exitAlterEvent(QSMySqlParser::AlterEventContext * /*ctx*/) override;

    virtual void enterAlterFunction(QSMySqlParser::AlterFunctionContext * /*ctx*/) override;
    virtual void exitAlterFunction(QSMySqlParser::AlterFunctionContext * /*ctx*/) override;

    virtual void enterAlterInstance(QSMySqlParser::AlterInstanceContext * /*ctx*/) override;
    virtual void exitAlterInstance(QSMySqlParser::AlterInstanceContext * /*ctx*/) override;

    virtual void enterAlterLogfileGroup(QSMySqlParser::AlterLogfileGroupContext * /*ctx*/) override;
    virtual void exitAlterLogfileGroup(QSMySqlParser::AlterLogfileGroupContext * /*ctx*/) override;

    virtual void enterAlterProcedure(QSMySqlParser::AlterProcedureContext * /*ctx*/) override;
    virtual void exitAlterProcedure(QSMySqlParser::AlterProcedureContext * /*ctx*/) override;

    virtual void enterAlterServer(QSMySqlParser::AlterServerContext * /*ctx*/) override;
    virtual void exitAlterServer(QSMySqlParser::AlterServerContext * /*ctx*/) override;

    virtual void enterAlterTable(QSMySqlParser::AlterTableContext * /*ctx*/) override;
    virtual void exitAlterTable(QSMySqlParser::AlterTableContext * /*ctx*/) override;

    virtual void enterAlterTablespace(QSMySqlParser::AlterTablespaceContext * /*ctx*/) override;
    virtual void exitAlterTablespace(QSMySqlParser::AlterTablespaceContext * /*ctx*/) override;

    virtual void enterAlterView(QSMySqlParser::AlterViewContext * /*ctx*/) override;
    virtual void exitAlterView(QSMySqlParser::AlterViewContext * /*ctx*/) override;

    virtual void enterAlterByTableOption(QSMySqlParser::AlterByTableOptionContext * /*ctx*/) override;
    virtual void exitAlterByTableOption(QSMySqlParser::AlterByTableOptionContext * /*ctx*/) override;

    virtual void enterAlterByAddColumn(QSMySqlParser::AlterByAddColumnContext * /*ctx*/) override;
    virtual void exitAlterByAddColumn(QSMySqlParser::AlterByAddColumnContext * /*ctx*/) override;

    virtual void enterAlterByAddColumns(QSMySqlParser::AlterByAddColumnsContext * /*ctx*/) override;
    virtual void exitAlterByAddColumns(QSMySqlParser::AlterByAddColumnsContext * /*ctx*/) override;

    virtual void enterAlterByAddIndex(QSMySqlParser::AlterByAddIndexContext * /*ctx*/) override;
    virtual void exitAlterByAddIndex(QSMySqlParser::AlterByAddIndexContext * /*ctx*/) override;

    virtual void enterAlterByAddPrimaryKey(QSMySqlParser::AlterByAddPrimaryKeyContext * /*ctx*/) override;
    virtual void exitAlterByAddPrimaryKey(QSMySqlParser::AlterByAddPrimaryKeyContext * /*ctx*/) override;

    virtual void enterAlterByAddUniqueKey(QSMySqlParser::AlterByAddUniqueKeyContext * /*ctx*/) override;
    virtual void exitAlterByAddUniqueKey(QSMySqlParser::AlterByAddUniqueKeyContext * /*ctx*/) override;

    virtual void enterAlterByAddSpecialIndex(QSMySqlParser::AlterByAddSpecialIndexContext * /*ctx*/) override;
    virtual void exitAlterByAddSpecialIndex(QSMySqlParser::AlterByAddSpecialIndexContext * /*ctx*/) override;

    virtual void enterAlterByAddForeignKey(QSMySqlParser::AlterByAddForeignKeyContext * /*ctx*/) override;
    virtual void exitAlterByAddForeignKey(QSMySqlParser::AlterByAddForeignKeyContext * /*ctx*/) override;

    virtual void enterAlterBySetAlgorithm(QSMySqlParser::AlterBySetAlgorithmContext * /*ctx*/) override;
    virtual void exitAlterBySetAlgorithm(QSMySqlParser::AlterBySetAlgorithmContext * /*ctx*/) override;

    virtual void enterAlterByChangeDefault(QSMySqlParser::AlterByChangeDefaultContext * /*ctx*/) override;
    virtual void exitAlterByChangeDefault(QSMySqlParser::AlterByChangeDefaultContext * /*ctx*/) override;

    virtual void enterAlterByChangeColumn(QSMySqlParser::AlterByChangeColumnContext * /*ctx*/) override;
    virtual void exitAlterByChangeColumn(QSMySqlParser::AlterByChangeColumnContext * /*ctx*/) override;

    virtual void enterAlterByLock(QSMySqlParser::AlterByLockContext * /*ctx*/) override;
    virtual void exitAlterByLock(QSMySqlParser::AlterByLockContext * /*ctx*/) override;

    virtual void enterAlterByModifyColumn(QSMySqlParser::AlterByModifyColumnContext * /*ctx*/) override;
    virtual void exitAlterByModifyColumn(QSMySqlParser::AlterByModifyColumnContext * /*ctx*/) override;

    virtual void enterAlterByDropColumn(QSMySqlParser::AlterByDropColumnContext * /*ctx*/) override;
    virtual void exitAlterByDropColumn(QSMySqlParser::AlterByDropColumnContext * /*ctx*/) override;

    virtual void enterAlterByDropPrimaryKey(QSMySqlParser::AlterByDropPrimaryKeyContext * /*ctx*/) override;
    virtual void exitAlterByDropPrimaryKey(QSMySqlParser::AlterByDropPrimaryKeyContext * /*ctx*/) override;

    virtual void enterAlterByDropIndex(QSMySqlParser::AlterByDropIndexContext * /*ctx*/) override;
    virtual void exitAlterByDropIndex(QSMySqlParser::AlterByDropIndexContext * /*ctx*/) override;

    virtual void enterAlterByDropForeignKey(QSMySqlParser::AlterByDropForeignKeyContext * /*ctx*/) override;
    virtual void exitAlterByDropForeignKey(QSMySqlParser::AlterByDropForeignKeyContext * /*ctx*/) override;

    virtual void enterAlterByDisableKeys(QSMySqlParser::AlterByDisableKeysContext * /*ctx*/) override;
    virtual void exitAlterByDisableKeys(QSMySqlParser::AlterByDisableKeysContext * /*ctx*/) override;

    virtual void enterAlterByEnableKeys(QSMySqlParser::AlterByEnableKeysContext * /*ctx*/) override;
    virtual void exitAlterByEnableKeys(QSMySqlParser::AlterByEnableKeysContext * /*ctx*/) override;

    virtual void enterAlterByRename(QSMySqlParser::AlterByRenameContext * /*ctx*/) override;
    virtual void exitAlterByRename(QSMySqlParser::AlterByRenameContext * /*ctx*/) override;

    virtual void enterAlterByOrder(QSMySqlParser::AlterByOrderContext * /*ctx*/) override;
    virtual void exitAlterByOrder(QSMySqlParser::AlterByOrderContext * /*ctx*/) override;

    virtual void enterAlterByConvertCharset(QSMySqlParser::AlterByConvertCharsetContext * /*ctx*/) override;
    virtual void exitAlterByConvertCharset(QSMySqlParser::AlterByConvertCharsetContext * /*ctx*/) override;

    virtual void enterAlterByDefaultCharset(QSMySqlParser::AlterByDefaultCharsetContext * /*ctx*/) override;
    virtual void exitAlterByDefaultCharset(QSMySqlParser::AlterByDefaultCharsetContext * /*ctx*/) override;

    virtual void enterAlterByDiscardTablespace(QSMySqlParser::AlterByDiscardTablespaceContext * /*ctx*/) override;
    virtual void exitAlterByDiscardTablespace(QSMySqlParser::AlterByDiscardTablespaceContext * /*ctx*/) override;

    virtual void enterAlterByImportTablespace(QSMySqlParser::AlterByImportTablespaceContext * /*ctx*/) override;
    virtual void exitAlterByImportTablespace(QSMySqlParser::AlterByImportTablespaceContext * /*ctx*/) override;

    virtual void enterAlterByForce(QSMySqlParser::AlterByForceContext * /*ctx*/) override;
    virtual void exitAlterByForce(QSMySqlParser::AlterByForceContext * /*ctx*/) override;

    virtual void enterAlterByValidate(QSMySqlParser::AlterByValidateContext * /*ctx*/) override;
    virtual void exitAlterByValidate(QSMySqlParser::AlterByValidateContext * /*ctx*/) override;

    virtual void enterAlterByAddPartition(QSMySqlParser::AlterByAddPartitionContext * /*ctx*/) override;
    virtual void exitAlterByAddPartition(QSMySqlParser::AlterByAddPartitionContext * /*ctx*/) override;

    virtual void enterAlterByDropPartition(QSMySqlParser::AlterByDropPartitionContext * /*ctx*/) override;
    virtual void exitAlterByDropPartition(QSMySqlParser::AlterByDropPartitionContext * /*ctx*/) override;

    virtual void enterAlterByDiscardPartition(QSMySqlParser::AlterByDiscardPartitionContext * /*ctx*/) override;
    virtual void exitAlterByDiscardPartition(QSMySqlParser::AlterByDiscardPartitionContext * /*ctx*/) override;

    virtual void enterAlterByImportPartition(QSMySqlParser::AlterByImportPartitionContext * /*ctx*/) override;
    virtual void exitAlterByImportPartition(QSMySqlParser::AlterByImportPartitionContext * /*ctx*/) override;

    virtual void enterAlterByTruncatePartition(QSMySqlParser::AlterByTruncatePartitionContext * /*ctx*/) override;
    virtual void exitAlterByTruncatePartition(QSMySqlParser::AlterByTruncatePartitionContext * /*ctx*/) override;

    virtual void enterAlterByCoalescePartition(QSMySqlParser::AlterByCoalescePartitionContext * /*ctx*/) override;
    virtual void exitAlterByCoalescePartition(QSMySqlParser::AlterByCoalescePartitionContext * /*ctx*/) override;

    virtual void enterAlterByReorganizePartition(QSMySqlParser::AlterByReorganizePartitionContext * /*ctx*/) override;
    virtual void exitAlterByReorganizePartition(QSMySqlParser::AlterByReorganizePartitionContext * /*ctx*/) override;

    virtual void enterAlterByExchangePartition(QSMySqlParser::AlterByExchangePartitionContext * /*ctx*/) override;
    virtual void exitAlterByExchangePartition(QSMySqlParser::AlterByExchangePartitionContext * /*ctx*/) override;

    virtual void enterAlterByAnalyzePartitiion(QSMySqlParser::AlterByAnalyzePartitiionContext * /*ctx*/) override;
    virtual void exitAlterByAnalyzePartitiion(QSMySqlParser::AlterByAnalyzePartitiionContext * /*ctx*/) override;

    virtual void enterAlterByCheckPartition(QSMySqlParser::AlterByCheckPartitionContext * /*ctx*/) override;
    virtual void exitAlterByCheckPartition(QSMySqlParser::AlterByCheckPartitionContext * /*ctx*/) override;

    virtual void enterAlterByOptimizePartition(QSMySqlParser::AlterByOptimizePartitionContext * /*ctx*/) override;
    virtual void exitAlterByOptimizePartition(QSMySqlParser::AlterByOptimizePartitionContext * /*ctx*/) override;

    virtual void enterAlterByRebuildPartition(QSMySqlParser::AlterByRebuildPartitionContext * /*ctx*/) override;
    virtual void exitAlterByRebuildPartition(QSMySqlParser::AlterByRebuildPartitionContext * /*ctx*/) override;

    virtual void enterAlterByRepairPartition(QSMySqlParser::AlterByRepairPartitionContext * /*ctx*/) override;
    virtual void exitAlterByRepairPartition(QSMySqlParser::AlterByRepairPartitionContext * /*ctx*/) override;

    virtual void enterAlterByRemovePartitioning(QSMySqlParser::AlterByRemovePartitioningContext * /*ctx*/) override;
    virtual void exitAlterByRemovePartitioning(QSMySqlParser::AlterByRemovePartitioningContext * /*ctx*/) override;

    virtual void enterAlterByUpgradePartitioning(QSMySqlParser::AlterByUpgradePartitioningContext * /*ctx*/) override;
    virtual void exitAlterByUpgradePartitioning(QSMySqlParser::AlterByUpgradePartitioningContext * /*ctx*/) override;

    virtual void enterDropDatabase(QSMySqlParser::DropDatabaseContext * /*ctx*/) override;
    virtual void exitDropDatabase(QSMySqlParser::DropDatabaseContext * /*ctx*/) override;

    virtual void enterDropEvent(QSMySqlParser::DropEventContext * /*ctx*/) override;
    virtual void exitDropEvent(QSMySqlParser::DropEventContext * /*ctx*/) override;

    virtual void enterDropIndex(QSMySqlParser::DropIndexContext * /*ctx*/) override;
    virtual void exitDropIndex(QSMySqlParser::DropIndexContext * /*ctx*/) override;

    virtual void enterDropLogfileGroup(QSMySqlParser::DropLogfileGroupContext * /*ctx*/) override;
    virtual void exitDropLogfileGroup(QSMySqlParser::DropLogfileGroupContext * /*ctx*/) override;

    virtual void enterDropProcedure(QSMySqlParser::DropProcedureContext * /*ctx*/) override;
    virtual void exitDropProcedure(QSMySqlParser::DropProcedureContext * /*ctx*/) override;

    virtual void enterDropFunction(QSMySqlParser::DropFunctionContext * /*ctx*/) override;
    virtual void exitDropFunction(QSMySqlParser::DropFunctionContext * /*ctx*/) override;

    virtual void enterDropServer(QSMySqlParser::DropServerContext * /*ctx*/) override;
    virtual void exitDropServer(QSMySqlParser::DropServerContext * /*ctx*/) override;

    virtual void enterDropTable(QSMySqlParser::DropTableContext * /*ctx*/) override;
    virtual void exitDropTable(QSMySqlParser::DropTableContext * /*ctx*/) override;

    virtual void enterDropTablespace(QSMySqlParser::DropTablespaceContext * /*ctx*/) override;
    virtual void exitDropTablespace(QSMySqlParser::DropTablespaceContext * /*ctx*/) override;

    virtual void enterDropTrigger(QSMySqlParser::DropTriggerContext * /*ctx*/) override;
    virtual void exitDropTrigger(QSMySqlParser::DropTriggerContext * /*ctx*/) override;

    virtual void enterDropView(QSMySqlParser::DropViewContext * /*ctx*/) override;
    virtual void exitDropView(QSMySqlParser::DropViewContext * /*ctx*/) override;

    virtual void enterRenameTable(QSMySqlParser::RenameTableContext * /*ctx*/) override;
    virtual void exitRenameTable(QSMySqlParser::RenameTableContext * /*ctx*/) override;

    virtual void enterRenameTableClause(QSMySqlParser::RenameTableClauseContext * /*ctx*/) override;
    virtual void exitRenameTableClause(QSMySqlParser::RenameTableClauseContext * /*ctx*/) override;

    virtual void enterTruncateTable(QSMySqlParser::TruncateTableContext * /*ctx*/) override;
    virtual void exitTruncateTable(QSMySqlParser::TruncateTableContext * /*ctx*/) override;

    virtual void enterCallStatement(QSMySqlParser::CallStatementContext * /*ctx*/) override;
    virtual void exitCallStatement(QSMySqlParser::CallStatementContext * /*ctx*/) override;

    virtual void enterDeleteStatement(QSMySqlParser::DeleteStatementContext * /*ctx*/) override;
    virtual void exitDeleteStatement(QSMySqlParser::DeleteStatementContext * /*ctx*/) override;

    virtual void enterDoStatement(QSMySqlParser::DoStatementContext * /*ctx*/) override;
    virtual void exitDoStatement(QSMySqlParser::DoStatementContext * /*ctx*/) override;

    virtual void enterHandlerStatement(QSMySqlParser::HandlerStatementContext * /*ctx*/) override;
    virtual void exitHandlerStatement(QSMySqlParser::HandlerStatementContext * /*ctx*/) override;

    virtual void enterInsertStatement(QSMySqlParser::InsertStatementContext * /*ctx*/) override;
    virtual void exitInsertStatement(QSMySqlParser::InsertStatementContext * /*ctx*/) override;

    virtual void enterLoadDataStatement(QSMySqlParser::LoadDataStatementContext * /*ctx*/) override;
    virtual void exitLoadDataStatement(QSMySqlParser::LoadDataStatementContext * /*ctx*/) override;

    virtual void enterLoadXmlStatement(QSMySqlParser::LoadXmlStatementContext * /*ctx*/) override;
    virtual void exitLoadXmlStatement(QSMySqlParser::LoadXmlStatementContext * /*ctx*/) override;

    virtual void enterReplaceStatement(QSMySqlParser::ReplaceStatementContext * /*ctx*/) override;
    virtual void exitReplaceStatement(QSMySqlParser::ReplaceStatementContext * /*ctx*/) override;

    virtual void enterSimpleSelect(QSMySqlParser::SimpleSelectContext * /*ctx*/) override;
    virtual void exitSimpleSelect(QSMySqlParser::SimpleSelectContext * /*ctx*/) override;

    virtual void enterParenthesisSelect(QSMySqlParser::ParenthesisSelectContext * /*ctx*/) override;
    virtual void exitParenthesisSelect(QSMySqlParser::ParenthesisSelectContext * /*ctx*/) override;

    virtual void enterUnionSelect(QSMySqlParser::UnionSelectContext * /*ctx*/) override;
    virtual void exitUnionSelect(QSMySqlParser::UnionSelectContext * /*ctx*/) override;

    virtual void enterUnionParenthesisSelect(QSMySqlParser::UnionParenthesisSelectContext * /*ctx*/) override;
    virtual void exitUnionParenthesisSelect(QSMySqlParser::UnionParenthesisSelectContext * /*ctx*/) override;

    virtual void enterUpdateStatement(QSMySqlParser::UpdateStatementContext * /*ctx*/) override;
    virtual void exitUpdateStatement(QSMySqlParser::UpdateStatementContext * /*ctx*/) override;

    virtual void enterInsertStatementValue(QSMySqlParser::InsertStatementValueContext * /*ctx*/) override;
    virtual void exitInsertStatementValue(QSMySqlParser::InsertStatementValueContext * /*ctx*/) override;

    virtual void enterUpdatedElement(QSMySqlParser::UpdatedElementContext * /*ctx*/) override;
    virtual void exitUpdatedElement(QSMySqlParser::UpdatedElementContext * /*ctx*/) override;

    virtual void enterAssignmentField(QSMySqlParser::AssignmentFieldContext * /*ctx*/) override;
    virtual void exitAssignmentField(QSMySqlParser::AssignmentFieldContext * /*ctx*/) override;

    virtual void enterLockClause(QSMySqlParser::LockClauseContext * /*ctx*/) override;
    virtual void exitLockClause(QSMySqlParser::LockClauseContext * /*ctx*/) override;

    virtual void enterSingleDeleteStatement(QSMySqlParser::SingleDeleteStatementContext * /*ctx*/) override;
    virtual void exitSingleDeleteStatement(QSMySqlParser::SingleDeleteStatementContext * /*ctx*/) override;

    virtual void enterMultipleDeleteStatement(QSMySqlParser::MultipleDeleteStatementContext * /*ctx*/) override;
    virtual void exitMultipleDeleteStatement(QSMySqlParser::MultipleDeleteStatementContext * /*ctx*/) override;

    virtual void enterHandlerOpenStatement(QSMySqlParser::HandlerOpenStatementContext * /*ctx*/) override;
    virtual void exitHandlerOpenStatement(QSMySqlParser::HandlerOpenStatementContext * /*ctx*/) override;

    virtual void enterHandlerReadIndexStatement(QSMySqlParser::HandlerReadIndexStatementContext * /*ctx*/) override;
    virtual void exitHandlerReadIndexStatement(QSMySqlParser::HandlerReadIndexStatementContext * /*ctx*/) override;

    virtual void enterHandlerReadStatement(QSMySqlParser::HandlerReadStatementContext * /*ctx*/) override;
    virtual void exitHandlerReadStatement(QSMySqlParser::HandlerReadStatementContext * /*ctx*/) override;

    virtual void enterHandlerCloseStatement(QSMySqlParser::HandlerCloseStatementContext * /*ctx*/) override;
    virtual void exitHandlerCloseStatement(QSMySqlParser::HandlerCloseStatementContext * /*ctx*/) override;

    virtual void enterSingleUpdateStatement(QSMySqlParser::SingleUpdateStatementContext * /*ctx*/) override;
    virtual void exitSingleUpdateStatement(QSMySqlParser::SingleUpdateStatementContext * /*ctx*/) override;

    virtual void enterMultipleUpdateStatement(QSMySqlParser::MultipleUpdateStatementContext * /*ctx*/) override;
    virtual void exitMultipleUpdateStatement(QSMySqlParser::MultipleUpdateStatementContext * /*ctx*/) override;

    virtual void enterOrderByClause(QSMySqlParser::OrderByClauseContext * /*ctx*/) override;
    virtual void exitOrderByClause(QSMySqlParser::OrderByClauseContext * /*ctx*/) override;

    virtual void enterOrderByExpression(QSMySqlParser::OrderByExpressionContext * /*ctx*/) override;
    virtual void exitOrderByExpression(QSMySqlParser::OrderByExpressionContext * /*ctx*/) override;

    virtual void enterTableSources(QSMySqlParser::TableSourcesContext * /*ctx*/) override;
    virtual void exitTableSources(QSMySqlParser::TableSourcesContext * /*ctx*/) override;

    virtual void enterTableSourceBase(QSMySqlParser::TableSourceBaseContext * /*ctx*/) override;
    virtual void exitTableSourceBase(QSMySqlParser::TableSourceBaseContext * /*ctx*/) override;

    virtual void enterTableSourceNested(QSMySqlParser::TableSourceNestedContext * /*ctx*/) override;
    virtual void exitTableSourceNested(QSMySqlParser::TableSourceNestedContext * /*ctx*/) override;

    virtual void enterAtomTableItem(QSMySqlParser::AtomTableItemContext * /*ctx*/) override;
    virtual void exitAtomTableItem(QSMySqlParser::AtomTableItemContext * /*ctx*/) override;

    virtual void enterSubqueryTableItem(QSMySqlParser::SubqueryTableItemContext * /*ctx*/) override;
    virtual void exitSubqueryTableItem(QSMySqlParser::SubqueryTableItemContext * /*ctx*/) override;

    virtual void enterTableSourcesItem(QSMySqlParser::TableSourcesItemContext * /*ctx*/) override;
    virtual void exitTableSourcesItem(QSMySqlParser::TableSourcesItemContext * /*ctx*/) override;

    virtual void enterIndexHint(QSMySqlParser::IndexHintContext * /*ctx*/) override;
    virtual void exitIndexHint(QSMySqlParser::IndexHintContext * /*ctx*/) override;

    virtual void enterIndexHintType(QSMySqlParser::IndexHintTypeContext * /*ctx*/) override;
    virtual void exitIndexHintType(QSMySqlParser::IndexHintTypeContext * /*ctx*/) override;

    virtual void enterInnerJoin(QSMySqlParser::InnerJoinContext * /*ctx*/) override;
    virtual void exitInnerJoin(QSMySqlParser::InnerJoinContext * /*ctx*/) override;

    virtual void enterStraightJoin(QSMySqlParser::StraightJoinContext * /*ctx*/) override;
    virtual void exitStraightJoin(QSMySqlParser::StraightJoinContext * /*ctx*/) override;

    virtual void enterOuterJoin(QSMySqlParser::OuterJoinContext * /*ctx*/) override;
    virtual void exitOuterJoin(QSMySqlParser::OuterJoinContext * /*ctx*/) override;

    virtual void enterNaturalJoin(QSMySqlParser::NaturalJoinContext * /*ctx*/) override;
    virtual void exitNaturalJoin(QSMySqlParser::NaturalJoinContext * /*ctx*/) override;

    virtual void enterQueryExpression(QSMySqlParser::QueryExpressionContext * /*ctx*/) override;
    virtual void exitQueryExpression(QSMySqlParser::QueryExpressionContext * /*ctx*/) override;

    virtual void enterQueryExpressionNointo(QSMySqlParser::QueryExpressionNointoContext * /*ctx*/) override;
    virtual void exitQueryExpressionNointo(QSMySqlParser::QueryExpressionNointoContext * /*ctx*/) override;

    virtual void enterQuerySpecification(QSMySqlParser::QuerySpecificationContext * /*ctx*/) override;
    virtual void exitQuerySpecification(QSMySqlParser::QuerySpecificationContext * /*ctx*/) override;

    virtual void enterQuerySpecificationNointo(QSMySqlParser::QuerySpecificationNointoContext * /*ctx*/) override;
    virtual void exitQuerySpecificationNointo(QSMySqlParser::QuerySpecificationNointoContext * /*ctx*/) override;

    virtual void enterUnionParenthesis(QSMySqlParser::UnionParenthesisContext * /*ctx*/) override;
    virtual void exitUnionParenthesis(QSMySqlParser::UnionParenthesisContext * /*ctx*/) override;

    virtual void enterUnionStatement(QSMySqlParser::UnionStatementContext * /*ctx*/) override;
    virtual void exitUnionStatement(QSMySqlParser::UnionStatementContext * /*ctx*/) override;

    virtual void enterSelectSpec(QSMySqlParser::SelectSpecContext * /*ctx*/) override;
    virtual void exitSelectSpec(QSMySqlParser::SelectSpecContext * /*ctx*/) override;

    virtual void enterSelectElements(QSMySqlParser::SelectElementsContext * /*ctx*/) override;
    virtual void exitSelectElements(QSMySqlParser::SelectElementsContext * /*ctx*/) override;

    virtual void enterSelectStarElement(QSMySqlParser::SelectStarElementContext * /*ctx*/) override;
    virtual void exitSelectStarElement(QSMySqlParser::SelectStarElementContext * /*ctx*/) override;

    virtual void enterSelectColumnElement(QSMySqlParser::SelectColumnElementContext * /*ctx*/) override;
    virtual void exitSelectColumnElement(QSMySqlParser::SelectColumnElementContext * /*ctx*/) override;

    virtual void enterSelectFunctionElement(QSMySqlParser::SelectFunctionElementContext * /*ctx*/) override;
    virtual void exitSelectFunctionElement(QSMySqlParser::SelectFunctionElementContext * /*ctx*/) override;

    virtual void enterSelectExpressionElement(QSMySqlParser::SelectExpressionElementContext * /*ctx*/) override;
    virtual void exitSelectExpressionElement(QSMySqlParser::SelectExpressionElementContext * /*ctx*/) override;

    virtual void enterSelectIntoVariables(QSMySqlParser::SelectIntoVariablesContext * /*ctx*/) override;
    virtual void exitSelectIntoVariables(QSMySqlParser::SelectIntoVariablesContext * /*ctx*/) override;

    virtual void enterSelectIntoDumpFile(QSMySqlParser::SelectIntoDumpFileContext * /*ctx*/) override;
    virtual void exitSelectIntoDumpFile(QSMySqlParser::SelectIntoDumpFileContext * /*ctx*/) override;

    virtual void enterSelectIntoTextFile(QSMySqlParser::SelectIntoTextFileContext * /*ctx*/) override;
    virtual void exitSelectIntoTextFile(QSMySqlParser::SelectIntoTextFileContext * /*ctx*/) override;

    virtual void enterSelectFieldsInto(QSMySqlParser::SelectFieldsIntoContext * /*ctx*/) override;
    virtual void exitSelectFieldsInto(QSMySqlParser::SelectFieldsIntoContext * /*ctx*/) override;

    virtual void enterSelectLinesInto(QSMySqlParser::SelectLinesIntoContext * /*ctx*/) override;
    virtual void exitSelectLinesInto(QSMySqlParser::SelectLinesIntoContext * /*ctx*/) override;

    virtual void enterFromClause(QSMySqlParser::FromClauseContext * /*ctx*/) override;
    virtual void exitFromClause(QSMySqlParser::FromClauseContext * /*ctx*/) override;

    virtual void enterGroupByItem(QSMySqlParser::GroupByItemContext * /*ctx*/) override;
    virtual void exitGroupByItem(QSMySqlParser::GroupByItemContext * /*ctx*/) override;

    virtual void enterLimitClause(QSMySqlParser::LimitClauseContext * /*ctx*/) override;
    virtual void exitLimitClause(QSMySqlParser::LimitClauseContext * /*ctx*/) override;

    virtual void enterStartTransaction(QSMySqlParser::StartTransactionContext * /*ctx*/) override;
    virtual void exitStartTransaction(QSMySqlParser::StartTransactionContext * /*ctx*/) override;

    virtual void enterBeginWork(QSMySqlParser::BeginWorkContext * /*ctx*/) override;
    virtual void exitBeginWork(QSMySqlParser::BeginWorkContext * /*ctx*/) override;

    virtual void enterCommitWork(QSMySqlParser::CommitWorkContext * /*ctx*/) override;
    virtual void exitCommitWork(QSMySqlParser::CommitWorkContext * /*ctx*/) override;

    virtual void enterRollbackWork(QSMySqlParser::RollbackWorkContext * /*ctx*/) override;
    virtual void exitRollbackWork(QSMySqlParser::RollbackWorkContext * /*ctx*/) override;

    virtual void enterSavepointStatement(QSMySqlParser::SavepointStatementContext * /*ctx*/) override;
    virtual void exitSavepointStatement(QSMySqlParser::SavepointStatementContext * /*ctx*/) override;

    virtual void enterRollbackStatement(QSMySqlParser::RollbackStatementContext * /*ctx*/) override;
    virtual void exitRollbackStatement(QSMySqlParser::RollbackStatementContext * /*ctx*/) override;

    virtual void enterReleaseStatement(QSMySqlParser::ReleaseStatementContext * /*ctx*/) override;
    virtual void exitReleaseStatement(QSMySqlParser::ReleaseStatementContext * /*ctx*/) override;

    virtual void enterLockTables(QSMySqlParser::LockTablesContext * /*ctx*/) override;
    virtual void exitLockTables(QSMySqlParser::LockTablesContext * /*ctx*/) override;

    virtual void enterUnlockTables(QSMySqlParser::UnlockTablesContext * /*ctx*/) override;
    virtual void exitUnlockTables(QSMySqlParser::UnlockTablesContext * /*ctx*/) override;

    virtual void enterSetAutocommitStatement(QSMySqlParser::SetAutocommitStatementContext * /*ctx*/) override;
    virtual void exitSetAutocommitStatement(QSMySqlParser::SetAutocommitStatementContext * /*ctx*/) override;

    virtual void enterSetTransactionStatement(QSMySqlParser::SetTransactionStatementContext * /*ctx*/) override;
    virtual void exitSetTransactionStatement(QSMySqlParser::SetTransactionStatementContext * /*ctx*/) override;

    virtual void enterTransactionMode(QSMySqlParser::TransactionModeContext * /*ctx*/) override;
    virtual void exitTransactionMode(QSMySqlParser::TransactionModeContext * /*ctx*/) override;

    virtual void enterLockTableElement(QSMySqlParser::LockTableElementContext * /*ctx*/) override;
    virtual void exitLockTableElement(QSMySqlParser::LockTableElementContext * /*ctx*/) override;

    virtual void enterLockAction(QSMySqlParser::LockActionContext * /*ctx*/) override;
    virtual void exitLockAction(QSMySqlParser::LockActionContext * /*ctx*/) override;

    virtual void enterTransactionOption(QSMySqlParser::TransactionOptionContext * /*ctx*/) override;
    virtual void exitTransactionOption(QSMySqlParser::TransactionOptionContext * /*ctx*/) override;

    virtual void enterTransactionLevel(QSMySqlParser::TransactionLevelContext * /*ctx*/) override;
    virtual void exitTransactionLevel(QSMySqlParser::TransactionLevelContext * /*ctx*/) override;

    virtual void enterChangeMaster(QSMySqlParser::ChangeMasterContext * /*ctx*/) override;
    virtual void exitChangeMaster(QSMySqlParser::ChangeMasterContext * /*ctx*/) override;

    virtual void enterChangeReplicationFilter(QSMySqlParser::ChangeReplicationFilterContext * /*ctx*/) override;
    virtual void exitChangeReplicationFilter(QSMySqlParser::ChangeReplicationFilterContext * /*ctx*/) override;

    virtual void enterPurgeBinaryLogs(QSMySqlParser::PurgeBinaryLogsContext * /*ctx*/) override;
    virtual void exitPurgeBinaryLogs(QSMySqlParser::PurgeBinaryLogsContext * /*ctx*/) override;

    virtual void enterResetMaster(QSMySqlParser::ResetMasterContext * /*ctx*/) override;
    virtual void exitResetMaster(QSMySqlParser::ResetMasterContext * /*ctx*/) override;

    virtual void enterResetSlave(QSMySqlParser::ResetSlaveContext * /*ctx*/) override;
    virtual void exitResetSlave(QSMySqlParser::ResetSlaveContext * /*ctx*/) override;

    virtual void enterStartSlave(QSMySqlParser::StartSlaveContext * /*ctx*/) override;
    virtual void exitStartSlave(QSMySqlParser::StartSlaveContext * /*ctx*/) override;

    virtual void enterStopSlave(QSMySqlParser::StopSlaveContext * /*ctx*/) override;
    virtual void exitStopSlave(QSMySqlParser::StopSlaveContext * /*ctx*/) override;

    virtual void enterStartGroupReplication(QSMySqlParser::StartGroupReplicationContext * /*ctx*/) override;
    virtual void exitStartGroupReplication(QSMySqlParser::StartGroupReplicationContext * /*ctx*/) override;

    virtual void enterStopGroupReplication(QSMySqlParser::StopGroupReplicationContext * /*ctx*/) override;
    virtual void exitStopGroupReplication(QSMySqlParser::StopGroupReplicationContext * /*ctx*/) override;

    virtual void enterMasterStringOption(QSMySqlParser::MasterStringOptionContext * /*ctx*/) override;
    virtual void exitMasterStringOption(QSMySqlParser::MasterStringOptionContext * /*ctx*/) override;

    virtual void enterMasterDecimalOption(QSMySqlParser::MasterDecimalOptionContext * /*ctx*/) override;
    virtual void exitMasterDecimalOption(QSMySqlParser::MasterDecimalOptionContext * /*ctx*/) override;

    virtual void enterMasterBoolOption(QSMySqlParser::MasterBoolOptionContext * /*ctx*/) override;
    virtual void exitMasterBoolOption(QSMySqlParser::MasterBoolOptionContext * /*ctx*/) override;

    virtual void enterMasterRealOption(QSMySqlParser::MasterRealOptionContext * /*ctx*/) override;
    virtual void exitMasterRealOption(QSMySqlParser::MasterRealOptionContext * /*ctx*/) override;

    virtual void enterMasterUidListOption(QSMySqlParser::MasterUidListOptionContext * /*ctx*/) override;
    virtual void exitMasterUidListOption(QSMySqlParser::MasterUidListOptionContext * /*ctx*/) override;

    virtual void enterStringMasterOption(QSMySqlParser::StringMasterOptionContext * /*ctx*/) override;
    virtual void exitStringMasterOption(QSMySqlParser::StringMasterOptionContext * /*ctx*/) override;

    virtual void enterDecimalMasterOption(QSMySqlParser::DecimalMasterOptionContext * /*ctx*/) override;
    virtual void exitDecimalMasterOption(QSMySqlParser::DecimalMasterOptionContext * /*ctx*/) override;

    virtual void enterBoolMasterOption(QSMySqlParser::BoolMasterOptionContext * /*ctx*/) override;
    virtual void exitBoolMasterOption(QSMySqlParser::BoolMasterOptionContext * /*ctx*/) override;

    virtual void enterChannelOption(QSMySqlParser::ChannelOptionContext * /*ctx*/) override;
    virtual void exitChannelOption(QSMySqlParser::ChannelOptionContext * /*ctx*/) override;

    virtual void enterDoDbReplication(QSMySqlParser::DoDbReplicationContext * /*ctx*/) override;
    virtual void exitDoDbReplication(QSMySqlParser::DoDbReplicationContext * /*ctx*/) override;

    virtual void enterIgnoreDbReplication(QSMySqlParser::IgnoreDbReplicationContext * /*ctx*/) override;
    virtual void exitIgnoreDbReplication(QSMySqlParser::IgnoreDbReplicationContext * /*ctx*/) override;

    virtual void enterDoTableReplication(QSMySqlParser::DoTableReplicationContext * /*ctx*/) override;
    virtual void exitDoTableReplication(QSMySqlParser::DoTableReplicationContext * /*ctx*/) override;

    virtual void enterIgnoreTableReplication(QSMySqlParser::IgnoreTableReplicationContext * /*ctx*/) override;
    virtual void exitIgnoreTableReplication(QSMySqlParser::IgnoreTableReplicationContext * /*ctx*/) override;

    virtual void enterWildDoTableReplication(QSMySqlParser::WildDoTableReplicationContext * /*ctx*/) override;
    virtual void exitWildDoTableReplication(QSMySqlParser::WildDoTableReplicationContext * /*ctx*/) override;

    virtual void enterWildIgnoreTableReplication(QSMySqlParser::WildIgnoreTableReplicationContext * /*ctx*/) override;
    virtual void exitWildIgnoreTableReplication(QSMySqlParser::WildIgnoreTableReplicationContext * /*ctx*/) override;

    virtual void enterRewriteDbReplication(QSMySqlParser::RewriteDbReplicationContext * /*ctx*/) override;
    virtual void exitRewriteDbReplication(QSMySqlParser::RewriteDbReplicationContext * /*ctx*/) override;

    virtual void enterTablePair(QSMySqlParser::TablePairContext * /*ctx*/) override;
    virtual void exitTablePair(QSMySqlParser::TablePairContext * /*ctx*/) override;

    virtual void enterThreadType(QSMySqlParser::ThreadTypeContext * /*ctx*/) override;
    virtual void exitThreadType(QSMySqlParser::ThreadTypeContext * /*ctx*/) override;

    virtual void enterGtidsUntilOption(QSMySqlParser::GtidsUntilOptionContext * /*ctx*/) override;
    virtual void exitGtidsUntilOption(QSMySqlParser::GtidsUntilOptionContext * /*ctx*/) override;

    virtual void enterMasterLogUntilOption(QSMySqlParser::MasterLogUntilOptionContext * /*ctx*/) override;
    virtual void exitMasterLogUntilOption(QSMySqlParser::MasterLogUntilOptionContext * /*ctx*/) override;

    virtual void enterRelayLogUntilOption(QSMySqlParser::RelayLogUntilOptionContext * /*ctx*/) override;
    virtual void exitRelayLogUntilOption(QSMySqlParser::RelayLogUntilOptionContext * /*ctx*/) override;

    virtual void enterSqlGapsUntilOption(QSMySqlParser::SqlGapsUntilOptionContext * /*ctx*/) override;
    virtual void exitSqlGapsUntilOption(QSMySqlParser::SqlGapsUntilOptionContext * /*ctx*/) override;

    virtual void enterUserConnectionOption(QSMySqlParser::UserConnectionOptionContext * /*ctx*/) override;
    virtual void exitUserConnectionOption(QSMySqlParser::UserConnectionOptionContext * /*ctx*/) override;

    virtual void enterPasswordConnectionOption(QSMySqlParser::PasswordConnectionOptionContext * /*ctx*/) override;
    virtual void exitPasswordConnectionOption(QSMySqlParser::PasswordConnectionOptionContext * /*ctx*/) override;

    virtual void enterDefaultAuthConnectionOption(QSMySqlParser::DefaultAuthConnectionOptionContext * /*ctx*/) override;
    virtual void exitDefaultAuthConnectionOption(QSMySqlParser::DefaultAuthConnectionOptionContext * /*ctx*/) override;

    virtual void enterPluginDirConnectionOption(QSMySqlParser::PluginDirConnectionOptionContext * /*ctx*/) override;
    virtual void exitPluginDirConnectionOption(QSMySqlParser::PluginDirConnectionOptionContext * /*ctx*/) override;

    virtual void enterGtuidSet(QSMySqlParser::GtuidSetContext * /*ctx*/) override;
    virtual void exitGtuidSet(QSMySqlParser::GtuidSetContext * /*ctx*/) override;

    virtual void enterXaStartTransaction(QSMySqlParser::XaStartTransactionContext * /*ctx*/) override;
    virtual void exitXaStartTransaction(QSMySqlParser::XaStartTransactionContext * /*ctx*/) override;

    virtual void enterXaEndTransaction(QSMySqlParser::XaEndTransactionContext * /*ctx*/) override;
    virtual void exitXaEndTransaction(QSMySqlParser::XaEndTransactionContext * /*ctx*/) override;

    virtual void enterXaPrepareStatement(QSMySqlParser::XaPrepareStatementContext * /*ctx*/) override;
    virtual void exitXaPrepareStatement(QSMySqlParser::XaPrepareStatementContext * /*ctx*/) override;

    virtual void enterXaCommitWork(QSMySqlParser::XaCommitWorkContext * /*ctx*/) override;
    virtual void exitXaCommitWork(QSMySqlParser::XaCommitWorkContext * /*ctx*/) override;

    virtual void enterXaRollbackWork(QSMySqlParser::XaRollbackWorkContext * /*ctx*/) override;
    virtual void exitXaRollbackWork(QSMySqlParser::XaRollbackWorkContext * /*ctx*/) override;

    virtual void enterXaRecoverWork(QSMySqlParser::XaRecoverWorkContext * /*ctx*/) override;
    virtual void exitXaRecoverWork(QSMySqlParser::XaRecoverWorkContext * /*ctx*/) override;

    virtual void enterPrepareStatement(QSMySqlParser::PrepareStatementContext * /*ctx*/) override;
    virtual void exitPrepareStatement(QSMySqlParser::PrepareStatementContext * /*ctx*/) override;

    virtual void enterExecuteStatement(QSMySqlParser::ExecuteStatementContext * /*ctx*/) override;
    virtual void exitExecuteStatement(QSMySqlParser::ExecuteStatementContext * /*ctx*/) override;

    virtual void enterDeallocatePrepare(QSMySqlParser::DeallocatePrepareContext * /*ctx*/) override;
    virtual void exitDeallocatePrepare(QSMySqlParser::DeallocatePrepareContext * /*ctx*/) override;

    virtual void enterRoutineBody(QSMySqlParser::RoutineBodyContext * /*ctx*/) override;
    virtual void exitRoutineBody(QSMySqlParser::RoutineBodyContext * /*ctx*/) override;

    virtual void enterBlockStatement(QSMySqlParser::BlockStatementContext * /*ctx*/) override;
    virtual void exitBlockStatement(QSMySqlParser::BlockStatementContext * /*ctx*/) override;

    virtual void enterCaseStatement(QSMySqlParser::CaseStatementContext * /*ctx*/) override;
    virtual void exitCaseStatement(QSMySqlParser::CaseStatementContext * /*ctx*/) override;

    virtual void enterIfStatement(QSMySqlParser::IfStatementContext * /*ctx*/) override;
    virtual void exitIfStatement(QSMySqlParser::IfStatementContext * /*ctx*/) override;

    virtual void enterIterateStatement(QSMySqlParser::IterateStatementContext * /*ctx*/) override;
    virtual void exitIterateStatement(QSMySqlParser::IterateStatementContext * /*ctx*/) override;

    virtual void enterLeaveStatement(QSMySqlParser::LeaveStatementContext * /*ctx*/) override;
    virtual void exitLeaveStatement(QSMySqlParser::LeaveStatementContext * /*ctx*/) override;

    virtual void enterLoopStatement(QSMySqlParser::LoopStatementContext * /*ctx*/) override;
    virtual void exitLoopStatement(QSMySqlParser::LoopStatementContext * /*ctx*/) override;

    virtual void enterRepeatStatement(QSMySqlParser::RepeatStatementContext * /*ctx*/) override;
    virtual void exitRepeatStatement(QSMySqlParser::RepeatStatementContext * /*ctx*/) override;

    virtual void enterReturnStatement(QSMySqlParser::ReturnStatementContext * /*ctx*/) override;
    virtual void exitReturnStatement(QSMySqlParser::ReturnStatementContext * /*ctx*/) override;

    virtual void enterWhileStatement(QSMySqlParser::WhileStatementContext * /*ctx*/) override;
    virtual void exitWhileStatement(QSMySqlParser::WhileStatementContext * /*ctx*/) override;

    virtual void enterCloseCursor(QSMySqlParser::CloseCursorContext * /*ctx*/) override;
    virtual void exitCloseCursor(QSMySqlParser::CloseCursorContext * /*ctx*/) override;

    virtual void enterFetchCursor(QSMySqlParser::FetchCursorContext * /*ctx*/) override;
    virtual void exitFetchCursor(QSMySqlParser::FetchCursorContext * /*ctx*/) override;

    virtual void enterOpenCursor(QSMySqlParser::OpenCursorContext * /*ctx*/) override;
    virtual void exitOpenCursor(QSMySqlParser::OpenCursorContext * /*ctx*/) override;

    virtual void enterDeclareVariable(QSMySqlParser::DeclareVariableContext * /*ctx*/) override;
    virtual void exitDeclareVariable(QSMySqlParser::DeclareVariableContext * /*ctx*/) override;

    virtual void enterDeclareCondition(QSMySqlParser::DeclareConditionContext * /*ctx*/) override;
    virtual void exitDeclareCondition(QSMySqlParser::DeclareConditionContext * /*ctx*/) override;

    virtual void enterDeclareCursor(QSMySqlParser::DeclareCursorContext * /*ctx*/) override;
    virtual void exitDeclareCursor(QSMySqlParser::DeclareCursorContext * /*ctx*/) override;

    virtual void enterDeclareHandler(QSMySqlParser::DeclareHandlerContext * /*ctx*/) override;
    virtual void exitDeclareHandler(QSMySqlParser::DeclareHandlerContext * /*ctx*/) override;

    virtual void enterHandlerConditionCode(QSMySqlParser::HandlerConditionCodeContext * /*ctx*/) override;
    virtual void exitHandlerConditionCode(QSMySqlParser::HandlerConditionCodeContext * /*ctx*/) override;

    virtual void enterHandlerConditionState(QSMySqlParser::HandlerConditionStateContext * /*ctx*/) override;
    virtual void exitHandlerConditionState(QSMySqlParser::HandlerConditionStateContext * /*ctx*/) override;

    virtual void enterHandlerConditionName(QSMySqlParser::HandlerConditionNameContext * /*ctx*/) override;
    virtual void exitHandlerConditionName(QSMySqlParser::HandlerConditionNameContext * /*ctx*/) override;

    virtual void enterHandlerConditionWarning(QSMySqlParser::HandlerConditionWarningContext * /*ctx*/) override;
    virtual void exitHandlerConditionWarning(QSMySqlParser::HandlerConditionWarningContext * /*ctx*/) override;

    virtual void enterHandlerConditionNotfound(QSMySqlParser::HandlerConditionNotfoundContext * /*ctx*/) override;
    virtual void exitHandlerConditionNotfound(QSMySqlParser::HandlerConditionNotfoundContext * /*ctx*/) override;

    virtual void enterHandlerConditionException(QSMySqlParser::HandlerConditionExceptionContext * /*ctx*/) override;
    virtual void exitHandlerConditionException(QSMySqlParser::HandlerConditionExceptionContext * /*ctx*/) override;

    virtual void enterProcedureSqlStatement(QSMySqlParser::ProcedureSqlStatementContext * /*ctx*/) override;
    virtual void exitProcedureSqlStatement(QSMySqlParser::ProcedureSqlStatementContext * /*ctx*/) override;

    virtual void enterCaseAlternative(QSMySqlParser::CaseAlternativeContext * /*ctx*/) override;
    virtual void exitCaseAlternative(QSMySqlParser::CaseAlternativeContext * /*ctx*/) override;

    virtual void enterElifAlternative(QSMySqlParser::ElifAlternativeContext * /*ctx*/) override;
    virtual void exitElifAlternative(QSMySqlParser::ElifAlternativeContext * /*ctx*/) override;

    virtual void enterAlterUserMysqlV56(QSMySqlParser::AlterUserMysqlV56Context * /*ctx*/) override;
    virtual void exitAlterUserMysqlV56(QSMySqlParser::AlterUserMysqlV56Context * /*ctx*/) override;

    virtual void enterAlterUserMysqlV57(QSMySqlParser::AlterUserMysqlV57Context * /*ctx*/) override;
    virtual void exitAlterUserMysqlV57(QSMySqlParser::AlterUserMysqlV57Context * /*ctx*/) override;

    virtual void enterCreateUserMysqlV56(QSMySqlParser::CreateUserMysqlV56Context * /*ctx*/) override;
    virtual void exitCreateUserMysqlV56(QSMySqlParser::CreateUserMysqlV56Context * /*ctx*/) override;

    virtual void enterCreateUserMysqlV57(QSMySqlParser::CreateUserMysqlV57Context * /*ctx*/) override;
    virtual void exitCreateUserMysqlV57(QSMySqlParser::CreateUserMysqlV57Context * /*ctx*/) override;

    virtual void enterDropUser(QSMySqlParser::DropUserContext * /*ctx*/) override;
    virtual void exitDropUser(QSMySqlParser::DropUserContext * /*ctx*/) override;

    virtual void enterGrantStatement(QSMySqlParser::GrantStatementContext * /*ctx*/) override;
    virtual void exitGrantStatement(QSMySqlParser::GrantStatementContext * /*ctx*/) override;

    virtual void enterGrantProxy(QSMySqlParser::GrantProxyContext * /*ctx*/) override;
    virtual void exitGrantProxy(QSMySqlParser::GrantProxyContext * /*ctx*/) override;

    virtual void enterRenameUser(QSMySqlParser::RenameUserContext * /*ctx*/) override;
    virtual void exitRenameUser(QSMySqlParser::RenameUserContext * /*ctx*/) override;

    virtual void enterDetailRevoke(QSMySqlParser::DetailRevokeContext * /*ctx*/) override;
    virtual void exitDetailRevoke(QSMySqlParser::DetailRevokeContext * /*ctx*/) override;

    virtual void enterShortRevoke(QSMySqlParser::ShortRevokeContext * /*ctx*/) override;
    virtual void exitShortRevoke(QSMySqlParser::ShortRevokeContext * /*ctx*/) override;

    virtual void enterRevokeProxy(QSMySqlParser::RevokeProxyContext * /*ctx*/) override;
    virtual void exitRevokeProxy(QSMySqlParser::RevokeProxyContext * /*ctx*/) override;

    virtual void enterSetPasswordStatement(QSMySqlParser::SetPasswordStatementContext * /*ctx*/) override;
    virtual void exitSetPasswordStatement(QSMySqlParser::SetPasswordStatementContext * /*ctx*/) override;

    virtual void enterUserSpecification(QSMySqlParser::UserSpecificationContext * /*ctx*/) override;
    virtual void exitUserSpecification(QSMySqlParser::UserSpecificationContext * /*ctx*/) override;

    virtual void enterPasswordAuthOption(QSMySqlParser::PasswordAuthOptionContext * /*ctx*/) override;
    virtual void exitPasswordAuthOption(QSMySqlParser::PasswordAuthOptionContext * /*ctx*/) override;

    virtual void enterStringAuthOption(QSMySqlParser::StringAuthOptionContext * /*ctx*/) override;
    virtual void exitStringAuthOption(QSMySqlParser::StringAuthOptionContext * /*ctx*/) override;

    virtual void enterHashAuthOption(QSMySqlParser::HashAuthOptionContext * /*ctx*/) override;
    virtual void exitHashAuthOption(QSMySqlParser::HashAuthOptionContext * /*ctx*/) override;

    virtual void enterSimpleAuthOption(QSMySqlParser::SimpleAuthOptionContext * /*ctx*/) override;
    virtual void exitSimpleAuthOption(QSMySqlParser::SimpleAuthOptionContext * /*ctx*/) override;

    virtual void enterTlsOption(QSMySqlParser::TlsOptionContext * /*ctx*/) override;
    virtual void exitTlsOption(QSMySqlParser::TlsOptionContext * /*ctx*/) override;

    virtual void enterUserResourceOption(QSMySqlParser::UserResourceOptionContext * /*ctx*/) override;
    virtual void exitUserResourceOption(QSMySqlParser::UserResourceOptionContext * /*ctx*/) override;

    virtual void enterUserPasswordOption(QSMySqlParser::UserPasswordOptionContext * /*ctx*/) override;
    virtual void exitUserPasswordOption(QSMySqlParser::UserPasswordOptionContext * /*ctx*/) override;

    virtual void enterUserLockOption(QSMySqlParser::UserLockOptionContext * /*ctx*/) override;
    virtual void exitUserLockOption(QSMySqlParser::UserLockOptionContext * /*ctx*/) override;

    virtual void enterPrivelegeClause(QSMySqlParser::PrivelegeClauseContext * /*ctx*/) override;
    virtual void exitPrivelegeClause(QSMySqlParser::PrivelegeClauseContext * /*ctx*/) override;

    virtual void enterPrivilege(QSMySqlParser::PrivilegeContext * /*ctx*/) override;
    virtual void exitPrivilege(QSMySqlParser::PrivilegeContext * /*ctx*/) override;

    virtual void enterCurrentSchemaPriviLevel(QSMySqlParser::CurrentSchemaPriviLevelContext * /*ctx*/) override;
    virtual void exitCurrentSchemaPriviLevel(QSMySqlParser::CurrentSchemaPriviLevelContext * /*ctx*/) override;

    virtual void enterGlobalPrivLevel(QSMySqlParser::GlobalPrivLevelContext * /*ctx*/) override;
    virtual void exitGlobalPrivLevel(QSMySqlParser::GlobalPrivLevelContext * /*ctx*/) override;

    virtual void enterDefiniteSchemaPrivLevel(QSMySqlParser::DefiniteSchemaPrivLevelContext * /*ctx*/) override;
    virtual void exitDefiniteSchemaPrivLevel(QSMySqlParser::DefiniteSchemaPrivLevelContext * /*ctx*/) override;

    virtual void enterDefiniteFullTablePrivLevel(QSMySqlParser::DefiniteFullTablePrivLevelContext * /*ctx*/) override;
    virtual void exitDefiniteFullTablePrivLevel(QSMySqlParser::DefiniteFullTablePrivLevelContext * /*ctx*/) override;

    virtual void enterDefiniteTablePrivLevel(QSMySqlParser::DefiniteTablePrivLevelContext * /*ctx*/) override;
    virtual void exitDefiniteTablePrivLevel(QSMySqlParser::DefiniteTablePrivLevelContext * /*ctx*/) override;

    virtual void enterRenameUserClause(QSMySqlParser::RenameUserClauseContext * /*ctx*/) override;
    virtual void exitRenameUserClause(QSMySqlParser::RenameUserClauseContext * /*ctx*/) override;

    virtual void enterAnalyzeTable(QSMySqlParser::AnalyzeTableContext * /*ctx*/) override;
    virtual void exitAnalyzeTable(QSMySqlParser::AnalyzeTableContext * /*ctx*/) override;

    virtual void enterCheckTable(QSMySqlParser::CheckTableContext * /*ctx*/) override;
    virtual void exitCheckTable(QSMySqlParser::CheckTableContext * /*ctx*/) override;

    virtual void enterChecksumTable(QSMySqlParser::ChecksumTableContext * /*ctx*/) override;
    virtual void exitChecksumTable(QSMySqlParser::ChecksumTableContext * /*ctx*/) override;

    virtual void enterOptimizeTable(QSMySqlParser::OptimizeTableContext * /*ctx*/) override;
    virtual void exitOptimizeTable(QSMySqlParser::OptimizeTableContext * /*ctx*/) override;

    virtual void enterRepairTable(QSMySqlParser::RepairTableContext * /*ctx*/) override;
    virtual void exitRepairTable(QSMySqlParser::RepairTableContext * /*ctx*/) override;

    virtual void enterCheckTableOption(QSMySqlParser::CheckTableOptionContext * /*ctx*/) override;
    virtual void exitCheckTableOption(QSMySqlParser::CheckTableOptionContext * /*ctx*/) override;

    virtual void enterCreateUdfunction(QSMySqlParser::CreateUdfunctionContext * /*ctx*/) override;
    virtual void exitCreateUdfunction(QSMySqlParser::CreateUdfunctionContext * /*ctx*/) override;

    virtual void enterInstallPlugin(QSMySqlParser::InstallPluginContext * /*ctx*/) override;
    virtual void exitInstallPlugin(QSMySqlParser::InstallPluginContext * /*ctx*/) override;

    virtual void enterUninstallPlugin(QSMySqlParser::UninstallPluginContext * /*ctx*/) override;
    virtual void exitUninstallPlugin(QSMySqlParser::UninstallPluginContext * /*ctx*/) override;

    virtual void enterSetVariable(QSMySqlParser::SetVariableContext * /*ctx*/) override;
    virtual void exitSetVariable(QSMySqlParser::SetVariableContext * /*ctx*/) override;

    virtual void enterSetCharset(QSMySqlParser::SetCharsetContext * /*ctx*/) override;
    virtual void exitSetCharset(QSMySqlParser::SetCharsetContext * /*ctx*/) override;

    virtual void enterSetNames(QSMySqlParser::SetNamesContext * /*ctx*/) override;
    virtual void exitSetNames(QSMySqlParser::SetNamesContext * /*ctx*/) override;

    virtual void enterSetPassword(QSMySqlParser::SetPasswordContext * /*ctx*/) override;
    virtual void exitSetPassword(QSMySqlParser::SetPasswordContext * /*ctx*/) override;

    virtual void enterSetTransaction(QSMySqlParser::SetTransactionContext * /*ctx*/) override;
    virtual void exitSetTransaction(QSMySqlParser::SetTransactionContext * /*ctx*/) override;

    virtual void enterSetAutocommit(QSMySqlParser::SetAutocommitContext * /*ctx*/) override;
    virtual void exitSetAutocommit(QSMySqlParser::SetAutocommitContext * /*ctx*/) override;

    virtual void enterShowMasterLogs(QSMySqlParser::ShowMasterLogsContext * /*ctx*/) override;
    virtual void exitShowMasterLogs(QSMySqlParser::ShowMasterLogsContext * /*ctx*/) override;

    virtual void enterShowLogEvents(QSMySqlParser::ShowLogEventsContext * /*ctx*/) override;
    virtual void exitShowLogEvents(QSMySqlParser::ShowLogEventsContext * /*ctx*/) override;

    virtual void enterShowObjectFilter(QSMySqlParser::ShowObjectFilterContext * /*ctx*/) override;
    virtual void exitShowObjectFilter(QSMySqlParser::ShowObjectFilterContext * /*ctx*/) override;

    virtual void enterShowColumns(QSMySqlParser::ShowColumnsContext * /*ctx*/) override;
    virtual void exitShowColumns(QSMySqlParser::ShowColumnsContext * /*ctx*/) override;

    virtual void enterShowCreateDb(QSMySqlParser::ShowCreateDbContext * /*ctx*/) override;
    virtual void exitShowCreateDb(QSMySqlParser::ShowCreateDbContext * /*ctx*/) override;

    virtual void enterShowCreateFullIdObject(QSMySqlParser::ShowCreateFullIdObjectContext * /*ctx*/) override;
    virtual void exitShowCreateFullIdObject(QSMySqlParser::ShowCreateFullIdObjectContext * /*ctx*/) override;

    virtual void enterShowCreateUser(QSMySqlParser::ShowCreateUserContext * /*ctx*/) override;
    virtual void exitShowCreateUser(QSMySqlParser::ShowCreateUserContext * /*ctx*/) override;

    virtual void enterShowEngine(QSMySqlParser::ShowEngineContext * /*ctx*/) override;
    virtual void exitShowEngine(QSMySqlParser::ShowEngineContext * /*ctx*/) override;

    virtual void enterShowGlobalInfo(QSMySqlParser::ShowGlobalInfoContext * /*ctx*/) override;
    virtual void exitShowGlobalInfo(QSMySqlParser::ShowGlobalInfoContext * /*ctx*/) override;

    virtual void enterShowErrors(QSMySqlParser::ShowErrorsContext * /*ctx*/) override;
    virtual void exitShowErrors(QSMySqlParser::ShowErrorsContext * /*ctx*/) override;

    virtual void enterShowCountErrors(QSMySqlParser::ShowCountErrorsContext * /*ctx*/) override;
    virtual void exitShowCountErrors(QSMySqlParser::ShowCountErrorsContext * /*ctx*/) override;

    virtual void enterShowSchemaFilter(QSMySqlParser::ShowSchemaFilterContext * /*ctx*/) override;
    virtual void exitShowSchemaFilter(QSMySqlParser::ShowSchemaFilterContext * /*ctx*/) override;

    virtual void enterShowRoutine(QSMySqlParser::ShowRoutineContext * /*ctx*/) override;
    virtual void exitShowRoutine(QSMySqlParser::ShowRoutineContext * /*ctx*/) override;

    virtual void enterShowGrants(QSMySqlParser::ShowGrantsContext * /*ctx*/) override;
    virtual void exitShowGrants(QSMySqlParser::ShowGrantsContext * /*ctx*/) override;

    virtual void enterShowIndexes(QSMySqlParser::ShowIndexesContext * /*ctx*/) override;
    virtual void exitShowIndexes(QSMySqlParser::ShowIndexesContext * /*ctx*/) override;

    virtual void enterShowOpenTables(QSMySqlParser::ShowOpenTablesContext * /*ctx*/) override;
    virtual void exitShowOpenTables(QSMySqlParser::ShowOpenTablesContext * /*ctx*/) override;

    virtual void enterShowProfile(QSMySqlParser::ShowProfileContext * /*ctx*/) override;
    virtual void exitShowProfile(QSMySqlParser::ShowProfileContext * /*ctx*/) override;

    virtual void enterShowSlaveStatus(QSMySqlParser::ShowSlaveStatusContext * /*ctx*/) override;
    virtual void exitShowSlaveStatus(QSMySqlParser::ShowSlaveStatusContext * /*ctx*/) override;

    virtual void enterVariableClause(QSMySqlParser::VariableClauseContext * /*ctx*/) override;
    virtual void exitVariableClause(QSMySqlParser::VariableClauseContext * /*ctx*/) override;

    virtual void enterShowCommonEntity(QSMySqlParser::ShowCommonEntityContext * /*ctx*/) override;
    virtual void exitShowCommonEntity(QSMySqlParser::ShowCommonEntityContext * /*ctx*/) override;

    virtual void enterShowFilter(QSMySqlParser::ShowFilterContext * /*ctx*/) override;
    virtual void exitShowFilter(QSMySqlParser::ShowFilterContext * /*ctx*/) override;

    virtual void enterShowGlobalInfoClause(QSMySqlParser::ShowGlobalInfoClauseContext * /*ctx*/) override;
    virtual void exitShowGlobalInfoClause(QSMySqlParser::ShowGlobalInfoClauseContext * /*ctx*/) override;

    virtual void enterShowSchemaEntity(QSMySqlParser::ShowSchemaEntityContext * /*ctx*/) override;
    virtual void exitShowSchemaEntity(QSMySqlParser::ShowSchemaEntityContext * /*ctx*/) override;

    virtual void enterShowProfileType(QSMySqlParser::ShowProfileTypeContext * /*ctx*/) override;
    virtual void exitShowProfileType(QSMySqlParser::ShowProfileTypeContext * /*ctx*/) override;

    virtual void enterBinlogStatement(QSMySqlParser::BinlogStatementContext * /*ctx*/) override;
    virtual void exitBinlogStatement(QSMySqlParser::BinlogStatementContext * /*ctx*/) override;

    virtual void enterCacheIndexStatement(QSMySqlParser::CacheIndexStatementContext * /*ctx*/) override;
    virtual void exitCacheIndexStatement(QSMySqlParser::CacheIndexStatementContext * /*ctx*/) override;

    virtual void enterFlushStatement(QSMySqlParser::FlushStatementContext * /*ctx*/) override;
    virtual void exitFlushStatement(QSMySqlParser::FlushStatementContext * /*ctx*/) override;

    virtual void enterKillStatement(QSMySqlParser::KillStatementContext * /*ctx*/) override;
    virtual void exitKillStatement(QSMySqlParser::KillStatementContext * /*ctx*/) override;

    virtual void enterLoadIndexIntoCache(QSMySqlParser::LoadIndexIntoCacheContext * /*ctx*/) override;
    virtual void exitLoadIndexIntoCache(QSMySqlParser::LoadIndexIntoCacheContext * /*ctx*/) override;

    virtual void enterResetStatement(QSMySqlParser::ResetStatementContext * /*ctx*/) override;
    virtual void exitResetStatement(QSMySqlParser::ResetStatementContext * /*ctx*/) override;

    virtual void enterShutdownStatement(QSMySqlParser::ShutdownStatementContext * /*ctx*/) override;
    virtual void exitShutdownStatement(QSMySqlParser::ShutdownStatementContext * /*ctx*/) override;

    virtual void enterTableIndexes(QSMySqlParser::TableIndexesContext * /*ctx*/) override;
    virtual void exitTableIndexes(QSMySqlParser::TableIndexesContext * /*ctx*/) override;

    virtual void enterSimpleFlushOption(QSMySqlParser::SimpleFlushOptionContext * /*ctx*/) override;
    virtual void exitSimpleFlushOption(QSMySqlParser::SimpleFlushOptionContext * /*ctx*/) override;

    virtual void enterChannelFlushOption(QSMySqlParser::ChannelFlushOptionContext * /*ctx*/) override;
    virtual void exitChannelFlushOption(QSMySqlParser::ChannelFlushOptionContext * /*ctx*/) override;

    virtual void enterTableFlushOption(QSMySqlParser::TableFlushOptionContext * /*ctx*/) override;
    virtual void exitTableFlushOption(QSMySqlParser::TableFlushOptionContext * /*ctx*/) override;

    virtual void enterFlushTableOption(QSMySqlParser::FlushTableOptionContext * /*ctx*/) override;
    virtual void exitFlushTableOption(QSMySqlParser::FlushTableOptionContext * /*ctx*/) override;

    virtual void enterLoadedTableIndexes(QSMySqlParser::LoadedTableIndexesContext * /*ctx*/) override;
    virtual void exitLoadedTableIndexes(QSMySqlParser::LoadedTableIndexesContext * /*ctx*/) override;

    virtual void enterSimpleDescribeStatement(QSMySqlParser::SimpleDescribeStatementContext * /*ctx*/) override;
    virtual void exitSimpleDescribeStatement(QSMySqlParser::SimpleDescribeStatementContext * /*ctx*/) override;

    virtual void enterFullDescribeStatement(QSMySqlParser::FullDescribeStatementContext * /*ctx*/) override;
    virtual void exitFullDescribeStatement(QSMySqlParser::FullDescribeStatementContext * /*ctx*/) override;

    virtual void enterHelpStatement(QSMySqlParser::HelpStatementContext * /*ctx*/) override;
    virtual void exitHelpStatement(QSMySqlParser::HelpStatementContext * /*ctx*/) override;

    virtual void enterUseStatement(QSMySqlParser::UseStatementContext * /*ctx*/) override;
    virtual void exitUseStatement(QSMySqlParser::UseStatementContext * /*ctx*/) override;

    virtual void enterDescribeStatements(QSMySqlParser::DescribeStatementsContext * /*ctx*/) override;
    virtual void exitDescribeStatements(QSMySqlParser::DescribeStatementsContext * /*ctx*/) override;

    virtual void enterDescribeConnection(QSMySqlParser::DescribeConnectionContext * /*ctx*/) override;
    virtual void exitDescribeConnection(QSMySqlParser::DescribeConnectionContext * /*ctx*/) override;

    virtual void enterFullId(QSMySqlParser::FullIdContext * /*ctx*/) override;
    virtual void exitFullId(QSMySqlParser::FullIdContext * /*ctx*/) override;

    virtual void enterTableName(QSMySqlParser::TableNameContext * /*ctx*/) override;
    virtual void exitTableName(QSMySqlParser::TableNameContext * /*ctx*/) override;

    virtual void enterFullColumnName(QSMySqlParser::FullColumnNameContext * /*ctx*/) override;
    virtual void exitFullColumnName(QSMySqlParser::FullColumnNameContext * /*ctx*/) override;

    virtual void enterIndexColumnName(QSMySqlParser::IndexColumnNameContext * /*ctx*/) override;
    virtual void exitIndexColumnName(QSMySqlParser::IndexColumnNameContext * /*ctx*/) override;

    virtual void enterUserName(QSMySqlParser::UserNameContext * /*ctx*/) override;
    virtual void exitUserName(QSMySqlParser::UserNameContext * /*ctx*/) override;

    virtual void enterMysqlVariable(QSMySqlParser::MysqlVariableContext * /*ctx*/) override;
    virtual void exitMysqlVariable(QSMySqlParser::MysqlVariableContext * /*ctx*/) override;

    virtual void enterCharsetName(QSMySqlParser::CharsetNameContext * /*ctx*/) override;
    virtual void exitCharsetName(QSMySqlParser::CharsetNameContext * /*ctx*/) override;

    virtual void enterCollationName(QSMySqlParser::CollationNameContext * /*ctx*/) override;
    virtual void exitCollationName(QSMySqlParser::CollationNameContext * /*ctx*/) override;

    virtual void enterEngineName(QSMySqlParser::EngineNameContext * /*ctx*/) override;
    virtual void exitEngineName(QSMySqlParser::EngineNameContext * /*ctx*/) override;

    virtual void enterUuidSet(QSMySqlParser::UuidSetContext * /*ctx*/) override;
    virtual void exitUuidSet(QSMySqlParser::UuidSetContext * /*ctx*/) override;

    virtual void enterXid(QSMySqlParser::XidContext * /*ctx*/) override;
    virtual void exitXid(QSMySqlParser::XidContext * /*ctx*/) override;

    virtual void enterXuidStringId(QSMySqlParser::XuidStringIdContext * /*ctx*/) override;
    virtual void exitXuidStringId(QSMySqlParser::XuidStringIdContext * /*ctx*/) override;

    virtual void enterAuthPlugin(QSMySqlParser::AuthPluginContext * /*ctx*/) override;
    virtual void exitAuthPlugin(QSMySqlParser::AuthPluginContext * /*ctx*/) override;

    virtual void enterUid(QSMySqlParser::UidContext * /*ctx*/) override;
    virtual void exitUid(QSMySqlParser::UidContext * /*ctx*/) override;

    virtual void enterSimpleId(QSMySqlParser::SimpleIdContext * /*ctx*/) override;
    virtual void exitSimpleId(QSMySqlParser::SimpleIdContext * /*ctx*/) override;

    virtual void enterDottedId(QSMySqlParser::DottedIdContext * /*ctx*/) override;
    virtual void exitDottedId(QSMySqlParser::DottedIdContext * /*ctx*/) override;

    virtual void enterDecimalLiteral(QSMySqlParser::DecimalLiteralContext * /*ctx*/) override;
    virtual void exitDecimalLiteral(QSMySqlParser::DecimalLiteralContext * /*ctx*/) override;

    virtual void enterFileSizeLiteral(QSMySqlParser::FileSizeLiteralContext * /*ctx*/) override;
    virtual void exitFileSizeLiteral(QSMySqlParser::FileSizeLiteralContext * /*ctx*/) override;

    virtual void enterStringLiteral(QSMySqlParser::StringLiteralContext * /*ctx*/) override;
    virtual void exitStringLiteral(QSMySqlParser::StringLiteralContext * /*ctx*/) override;

    virtual void enterBooleanLiteral(QSMySqlParser::BooleanLiteralContext * /*ctx*/) override;
    virtual void exitBooleanLiteral(QSMySqlParser::BooleanLiteralContext * /*ctx*/) override;

    virtual void enterHexadecimalLiteral(QSMySqlParser::HexadecimalLiteralContext * /*ctx*/) override;
    virtual void exitHexadecimalLiteral(QSMySqlParser::HexadecimalLiteralContext * /*ctx*/) override;

    virtual void enterNullNotnull(QSMySqlParser::NullNotnullContext * /*ctx*/) override;
    virtual void exitNullNotnull(QSMySqlParser::NullNotnullContext * /*ctx*/) override;

    virtual void enterConstant(QSMySqlParser::ConstantContext * /*ctx*/) override;
    virtual void exitConstant(QSMySqlParser::ConstantContext * /*ctx*/) override;

    virtual void enterStringDataType(QSMySqlParser::StringDataTypeContext * /*ctx*/) override;
    virtual void exitStringDataType(QSMySqlParser::StringDataTypeContext * /*ctx*/) override;

    virtual void enterDimensionDataType(QSMySqlParser::DimensionDataTypeContext * /*ctx*/) override;
    virtual void exitDimensionDataType(QSMySqlParser::DimensionDataTypeContext * /*ctx*/) override;

    virtual void enterSimpleDataType(QSMySqlParser::SimpleDataTypeContext * /*ctx*/) override;
    virtual void exitSimpleDataType(QSMySqlParser::SimpleDataTypeContext * /*ctx*/) override;

    virtual void enterCollectionDataType(QSMySqlParser::CollectionDataTypeContext * /*ctx*/) override;
    virtual void exitCollectionDataType(QSMySqlParser::CollectionDataTypeContext * /*ctx*/) override;

    virtual void enterSpatialDataType(QSMySqlParser::SpatialDataTypeContext * /*ctx*/) override;
    virtual void exitSpatialDataType(QSMySqlParser::SpatialDataTypeContext * /*ctx*/) override;

    virtual void enterConvertedDataType(QSMySqlParser::ConvertedDataTypeContext * /*ctx*/) override;
    virtual void exitConvertedDataType(QSMySqlParser::ConvertedDataTypeContext * /*ctx*/) override;

    virtual void enterLengthOneDimension(QSMySqlParser::LengthOneDimensionContext * /*ctx*/) override;
    virtual void exitLengthOneDimension(QSMySqlParser::LengthOneDimensionContext * /*ctx*/) override;

    virtual void enterLengthTwoDimension(QSMySqlParser::LengthTwoDimensionContext * /*ctx*/) override;
    virtual void exitLengthTwoDimension(QSMySqlParser::LengthTwoDimensionContext * /*ctx*/) override;

    virtual void enterLengthTwoOptionalDimension(QSMySqlParser::LengthTwoOptionalDimensionContext * /*ctx*/) override;
    virtual void exitLengthTwoOptionalDimension(QSMySqlParser::LengthTwoOptionalDimensionContext * /*ctx*/) override;

    virtual void enterUidList(QSMySqlParser::UidListContext * /*ctx*/) override;
    virtual void exitUidList(QSMySqlParser::UidListContext * /*ctx*/) override;

    virtual void enterTables(QSMySqlParser::TablesContext * /*ctx*/) override;
    virtual void exitTables(QSMySqlParser::TablesContext * /*ctx*/) override;

    virtual void enterIndexColumnNames(QSMySqlParser::IndexColumnNamesContext * /*ctx*/) override;
    virtual void exitIndexColumnNames(QSMySqlParser::IndexColumnNamesContext * /*ctx*/) override;

    virtual void enterExpressions(QSMySqlParser::ExpressionsContext * /*ctx*/) override;
    virtual void exitExpressions(QSMySqlParser::ExpressionsContext * /*ctx*/) override;

    virtual void enterExpressionsWithDefaults(QSMySqlParser::ExpressionsWithDefaultsContext * /*ctx*/) override;
    virtual void exitExpressionsWithDefaults(QSMySqlParser::ExpressionsWithDefaultsContext * /*ctx*/) override;

    virtual void enterConstants(QSMySqlParser::ConstantsContext * /*ctx*/) override;
    virtual void exitConstants(QSMySqlParser::ConstantsContext * /*ctx*/) override;

    virtual void enterSimpleStrings(QSMySqlParser::SimpleStringsContext * /*ctx*/) override;
    virtual void exitSimpleStrings(QSMySqlParser::SimpleStringsContext * /*ctx*/) override;

    virtual void enterUserVariables(QSMySqlParser::UserVariablesContext * /*ctx*/) override;
    virtual void exitUserVariables(QSMySqlParser::UserVariablesContext * /*ctx*/) override;

    virtual void enterDefaultValue(QSMySqlParser::DefaultValueContext * /*ctx*/) override;
    virtual void exitDefaultValue(QSMySqlParser::DefaultValueContext * /*ctx*/) override;

    virtual void enterExpressionOrDefault(QSMySqlParser::ExpressionOrDefaultContext * /*ctx*/) override;
    virtual void exitExpressionOrDefault(QSMySqlParser::ExpressionOrDefaultContext * /*ctx*/) override;

    virtual void enterIfExists(QSMySqlParser::IfExistsContext * /*ctx*/) override;
    virtual void exitIfExists(QSMySqlParser::IfExistsContext * /*ctx*/) override;

    virtual void enterIfNotExists(QSMySqlParser::IfNotExistsContext * /*ctx*/) override;
    virtual void exitIfNotExists(QSMySqlParser::IfNotExistsContext * /*ctx*/) override;

    virtual void enterSpecificFunctionCall(QSMySqlParser::SpecificFunctionCallContext * /*ctx*/) override;
    virtual void exitSpecificFunctionCall(QSMySqlParser::SpecificFunctionCallContext * /*ctx*/) override;

    virtual void enterAggregateFunctionCall(QSMySqlParser::AggregateFunctionCallContext * /*ctx*/) override;
    virtual void exitAggregateFunctionCall(QSMySqlParser::AggregateFunctionCallContext * /*ctx*/) override;

    virtual void enterScalarFunctionCall(QSMySqlParser::ScalarFunctionCallContext * /*ctx*/) override;
    virtual void exitScalarFunctionCall(QSMySqlParser::ScalarFunctionCallContext * /*ctx*/) override;

    virtual void enterUdfFunctionCall(QSMySqlParser::UdfFunctionCallContext * /*ctx*/) override;
    virtual void exitUdfFunctionCall(QSMySqlParser::UdfFunctionCallContext * /*ctx*/) override;

    virtual void enterPasswordFunctionCall(QSMySqlParser::PasswordFunctionCallContext * /*ctx*/) override;
    virtual void exitPasswordFunctionCall(QSMySqlParser::PasswordFunctionCallContext * /*ctx*/) override;

    virtual void enterSimpleFunctionCall(QSMySqlParser::SimpleFunctionCallContext * /*ctx*/) override;
    virtual void exitSimpleFunctionCall(QSMySqlParser::SimpleFunctionCallContext * /*ctx*/) override;

    virtual void enterDataTypeFunctionCall(QSMySqlParser::DataTypeFunctionCallContext * /*ctx*/) override;
    virtual void exitDataTypeFunctionCall(QSMySqlParser::DataTypeFunctionCallContext * /*ctx*/) override;

    virtual void enterValuesFunctionCall(QSMySqlParser::ValuesFunctionCallContext * /*ctx*/) override;
    virtual void exitValuesFunctionCall(QSMySqlParser::ValuesFunctionCallContext * /*ctx*/) override;

    virtual void enterCaseFunctionCall(QSMySqlParser::CaseFunctionCallContext * /*ctx*/) override;
    virtual void exitCaseFunctionCall(QSMySqlParser::CaseFunctionCallContext * /*ctx*/) override;

    virtual void enterCharFunctionCall(QSMySqlParser::CharFunctionCallContext * /*ctx*/) override;
    virtual void exitCharFunctionCall(QSMySqlParser::CharFunctionCallContext * /*ctx*/) override;

    virtual void enterPositionFunctionCall(QSMySqlParser::PositionFunctionCallContext * /*ctx*/) override;
    virtual void exitPositionFunctionCall(QSMySqlParser::PositionFunctionCallContext * /*ctx*/) override;

    virtual void enterSubstrFunctionCall(QSMySqlParser::SubstrFunctionCallContext * /*ctx*/) override;
    virtual void exitSubstrFunctionCall(QSMySqlParser::SubstrFunctionCallContext * /*ctx*/) override;

    virtual void enterTrimFunctionCall(QSMySqlParser::TrimFunctionCallContext * /*ctx*/) override;
    virtual void exitTrimFunctionCall(QSMySqlParser::TrimFunctionCallContext * /*ctx*/) override;

    virtual void enterWeightFunctionCall(QSMySqlParser::WeightFunctionCallContext * /*ctx*/) override;
    virtual void exitWeightFunctionCall(QSMySqlParser::WeightFunctionCallContext * /*ctx*/) override;

    virtual void enterExtractFunctionCall(QSMySqlParser::ExtractFunctionCallContext * /*ctx*/) override;
    virtual void exitExtractFunctionCall(QSMySqlParser::ExtractFunctionCallContext * /*ctx*/) override;

    virtual void enterGetFormatFunctionCall(QSMySqlParser::GetFormatFunctionCallContext * /*ctx*/) override;
    virtual void exitGetFormatFunctionCall(QSMySqlParser::GetFormatFunctionCallContext * /*ctx*/) override;

    virtual void enterCaseFuncAlternative(QSMySqlParser::CaseFuncAlternativeContext * /*ctx*/) override;
    virtual void exitCaseFuncAlternative(QSMySqlParser::CaseFuncAlternativeContext * /*ctx*/) override;

    virtual void enterLevelWeightList(QSMySqlParser::LevelWeightListContext * /*ctx*/) override;
    virtual void exitLevelWeightList(QSMySqlParser::LevelWeightListContext * /*ctx*/) override;

    virtual void enterLevelWeightRange(QSMySqlParser::LevelWeightRangeContext * /*ctx*/) override;
    virtual void exitLevelWeightRange(QSMySqlParser::LevelWeightRangeContext * /*ctx*/) override;

    virtual void enterLevelInWeightListElement(QSMySqlParser::LevelInWeightListElementContext * /*ctx*/) override;
    virtual void exitLevelInWeightListElement(QSMySqlParser::LevelInWeightListElementContext * /*ctx*/) override;

    virtual void enterAggregateWindowedFunction(QSMySqlParser::AggregateWindowedFunctionContext * /*ctx*/) override;
    virtual void exitAggregateWindowedFunction(QSMySqlParser::AggregateWindowedFunctionContext * /*ctx*/) override;

    virtual void enterScalarFunctionName(QSMySqlParser::ScalarFunctionNameContext * /*ctx*/) override;
    virtual void exitScalarFunctionName(QSMySqlParser::ScalarFunctionNameContext * /*ctx*/) override;

    virtual void enterPasswordFunctionClause(QSMySqlParser::PasswordFunctionClauseContext * /*ctx*/) override;
    virtual void exitPasswordFunctionClause(QSMySqlParser::PasswordFunctionClauseContext * /*ctx*/) override;

    virtual void enterFunctionArgs(QSMySqlParser::FunctionArgsContext * /*ctx*/) override;
    virtual void exitFunctionArgs(QSMySqlParser::FunctionArgsContext * /*ctx*/) override;

    virtual void enterFunctionArg(QSMySqlParser::FunctionArgContext * /*ctx*/) override;
    virtual void exitFunctionArg(QSMySqlParser::FunctionArgContext * /*ctx*/) override;

    virtual void enterIsExpression(QSMySqlParser::IsExpressionContext * /*ctx*/) override;
    virtual void exitIsExpression(QSMySqlParser::IsExpressionContext * /*ctx*/) override;

    virtual void enterNotExpression(QSMySqlParser::NotExpressionContext * /*ctx*/) override;
    virtual void exitNotExpression(QSMySqlParser::NotExpressionContext * /*ctx*/) override;

    virtual void enterQservFunctionSpecExpression(QSMySqlParser::QservFunctionSpecExpressionContext *ctx) override;
    virtual void exitQservFunctionSpecExpression(QSMySqlParser::QservFunctionSpecExpressionContext *ctx) override;

    virtual void enterLogicalExpression(QSMySqlParser::LogicalExpressionContext * /*ctx*/) override;
    virtual void exitLogicalExpression(QSMySqlParser::LogicalExpressionContext * /*ctx*/) override;

    virtual void enterPredicateExpression(QSMySqlParser::PredicateExpressionContext * /*ctx*/) override;
    virtual void exitPredicateExpression(QSMySqlParser::PredicateExpressionContext * /*ctx*/) override;

    virtual void enterQservFunctionSpec(QSMySqlParser::QservFunctionSpecContext * /*ctx*/) override;
    virtual void exitQservFunctionSpec(QSMySqlParser::QservFunctionSpecContext * /*ctx*/) override;

    virtual void enterSoundsLikePredicate(QSMySqlParser::SoundsLikePredicateContext * /*ctx*/) override;
    virtual void exitSoundsLikePredicate(QSMySqlParser::SoundsLikePredicateContext * /*ctx*/) override;

    virtual void enterExpressionAtomPredicate(QSMySqlParser::ExpressionAtomPredicateContext * /*ctx*/) override;
    virtual void exitExpressionAtomPredicate(QSMySqlParser::ExpressionAtomPredicateContext * /*ctx*/) override;

    virtual void enterInPredicate(QSMySqlParser::InPredicateContext * /*ctx*/) override;
    virtual void exitInPredicate(QSMySqlParser::InPredicateContext * /*ctx*/) override;

    virtual void enterSubqueryComparasionPredicate(QSMySqlParser::SubqueryComparasionPredicateContext * /*ctx*/) override;
    virtual void exitSubqueryComparasionPredicate(QSMySqlParser::SubqueryComparasionPredicateContext * /*ctx*/) override;

    virtual void enterBetweenPredicate(QSMySqlParser::BetweenPredicateContext * /*ctx*/) override;
    virtual void exitBetweenPredicate(QSMySqlParser::BetweenPredicateContext * /*ctx*/) override;

    virtual void enterBinaryComparasionPredicate(QSMySqlParser::BinaryComparasionPredicateContext * /*ctx*/) override;
    virtual void exitBinaryComparasionPredicate(QSMySqlParser::BinaryComparasionPredicateContext * /*ctx*/) override;

    virtual void enterIsNullPredicate(QSMySqlParser::IsNullPredicateContext * /*ctx*/) override;
    virtual void exitIsNullPredicate(QSMySqlParser::IsNullPredicateContext * /*ctx*/) override;

    virtual void enterLikePredicate(QSMySqlParser::LikePredicateContext * /*ctx*/) override;
    virtual void exitLikePredicate(QSMySqlParser::LikePredicateContext * /*ctx*/) override;

    virtual void enterRegexpPredicate(QSMySqlParser::RegexpPredicateContext * /*ctx*/) override;
    virtual void exitRegexpPredicate(QSMySqlParser::RegexpPredicateContext * /*ctx*/) override;

    virtual void enterUnaryExpressionAtom(QSMySqlParser::UnaryExpressionAtomContext * /*ctx*/) override;
    virtual void exitUnaryExpressionAtom(QSMySqlParser::UnaryExpressionAtomContext * /*ctx*/) override;

    virtual void enterCollateExpressionAtom(QSMySqlParser::CollateExpressionAtomContext * /*ctx*/) override;
    virtual void exitCollateExpressionAtom(QSMySqlParser::CollateExpressionAtomContext * /*ctx*/) override;

    virtual void enterSubqueryExpessionAtom(QSMySqlParser::SubqueryExpessionAtomContext * /*ctx*/) override;
    virtual void exitSubqueryExpessionAtom(QSMySqlParser::SubqueryExpessionAtomContext * /*ctx*/) override;

    virtual void enterMysqlVariableExpressionAtom(QSMySqlParser::MysqlVariableExpressionAtomContext * /*ctx*/) override;
    virtual void exitMysqlVariableExpressionAtom(QSMySqlParser::MysqlVariableExpressionAtomContext * /*ctx*/) override;

    virtual void enterNestedExpressionAtom(QSMySqlParser::NestedExpressionAtomContext * /*ctx*/) override;
    virtual void exitNestedExpressionAtom(QSMySqlParser::NestedExpressionAtomContext * /*ctx*/) override;

    virtual void enterNestedRowExpressionAtom(QSMySqlParser::NestedRowExpressionAtomContext * /*ctx*/) override;
    virtual void exitNestedRowExpressionAtom(QSMySqlParser::NestedRowExpressionAtomContext * /*ctx*/) override;

    virtual void enterMathExpressionAtom(QSMySqlParser::MathExpressionAtomContext * /*ctx*/) override;
    virtual void exitMathExpressionAtom(QSMySqlParser::MathExpressionAtomContext * /*ctx*/) override;

    virtual void enterIntervalExpressionAtom(QSMySqlParser::IntervalExpressionAtomContext * /*ctx*/) override;
    virtual void exitIntervalExpressionAtom(QSMySqlParser::IntervalExpressionAtomContext * /*ctx*/) override;

    virtual void enterExistsExpessionAtom(QSMySqlParser::ExistsExpessionAtomContext * /*ctx*/) override;
    virtual void exitExistsExpessionAtom(QSMySqlParser::ExistsExpessionAtomContext * /*ctx*/) override;

    virtual void enterConstantExpressionAtom(QSMySqlParser::ConstantExpressionAtomContext * /*ctx*/) override;
    virtual void exitConstantExpressionAtom(QSMySqlParser::ConstantExpressionAtomContext * /*ctx*/) override;

    virtual void enterFunctionCallExpressionAtom(QSMySqlParser::FunctionCallExpressionAtomContext * /*ctx*/) override;
    virtual void exitFunctionCallExpressionAtom(QSMySqlParser::FunctionCallExpressionAtomContext * /*ctx*/) override;

    virtual void enterBinaryExpressionAtom(QSMySqlParser::BinaryExpressionAtomContext * /*ctx*/) override;
    virtual void exitBinaryExpressionAtom(QSMySqlParser::BinaryExpressionAtomContext * /*ctx*/) override;

    virtual void enterFullColumnNameExpressionAtom(QSMySqlParser::FullColumnNameExpressionAtomContext * /*ctx*/) override;
    virtual void exitFullColumnNameExpressionAtom(QSMySqlParser::FullColumnNameExpressionAtomContext * /*ctx*/) override;

    virtual void enterBitExpressionAtom(QSMySqlParser::BitExpressionAtomContext * /*ctx*/) override;
    virtual void exitBitExpressionAtom(QSMySqlParser::BitExpressionAtomContext * /*ctx*/) override;

    virtual void enterUnaryOperator(QSMySqlParser::UnaryOperatorContext * /*ctx*/) override;
    virtual void exitUnaryOperator(QSMySqlParser::UnaryOperatorContext * /*ctx*/) override;

    virtual void enterComparisonOperator(QSMySqlParser::ComparisonOperatorContext * /*ctx*/) override;
    virtual void exitComparisonOperator(QSMySqlParser::ComparisonOperatorContext * /*ctx*/) override;

    virtual void enterLogicalOperator(QSMySqlParser::LogicalOperatorContext * /*ctx*/) override;
    virtual void exitLogicalOperator(QSMySqlParser::LogicalOperatorContext * /*ctx*/) override;

    virtual void enterBitOperator(QSMySqlParser::BitOperatorContext * /*ctx*/) override;
    virtual void exitBitOperator(QSMySqlParser::BitOperatorContext * /*ctx*/) override;

    virtual void enterMathOperator(QSMySqlParser::MathOperatorContext * /*ctx*/) override;
    virtual void exitMathOperator(QSMySqlParser::MathOperatorContext * /*ctx*/) override;

    virtual void enterCharsetNameBase(QSMySqlParser::CharsetNameBaseContext * /*ctx*/) override;
    virtual void exitCharsetNameBase(QSMySqlParser::CharsetNameBaseContext * /*ctx*/) override;

    virtual void enterTransactionLevelBase(QSMySqlParser::TransactionLevelBaseContext * /*ctx*/) override;
    virtual void exitTransactionLevelBase(QSMySqlParser::TransactionLevelBaseContext * /*ctx*/) override;

    virtual void enterPrivilegesBase(QSMySqlParser::PrivilegesBaseContext * /*ctx*/) override;
    virtual void exitPrivilegesBase(QSMySqlParser::PrivilegesBaseContext * /*ctx*/) override;

    virtual void enterIntervalTypeBase(QSMySqlParser::IntervalTypeBaseContext * /*ctx*/) override;
    virtual void exitIntervalTypeBase(QSMySqlParser::IntervalTypeBaseContext * /*ctx*/) override;

    virtual void enterDataTypeBase(QSMySqlParser::DataTypeBaseContext * /*ctx*/) override;
    virtual void exitDataTypeBase(QSMySqlParser::DataTypeBaseContext * /*ctx*/) override;

    virtual void enterKeywordsCanBeId(QSMySqlParser::KeywordsCanBeIdContext * /*ctx*/) override;
    virtual void exitKeywordsCanBeId(QSMySqlParser::KeywordsCanBeIdContext * /*ctx*/) override;

    virtual void enterFunctionNameBase(QSMySqlParser::FunctionNameBaseContext * /*ctx*/) override;
    virtual void exitFunctionNameBase(QSMySqlParser::FunctionNameBaseContext * /*ctx*/) override;

    virtual void enterEveryRule(antlr4::ParserRuleContext * /*ctx*/) override { }
    virtual void exitEveryRule(antlr4::ParserRuleContext * /*ctx*/) override { }
    virtual void visitTerminal(antlr4::tree::TerminalNode * /*node*/) override { }
    virtual void visitErrorNode(antlr4::tree::ErrorNode * /*node*/) override { }

private:
    // Adapter is a base class for a stack of adapter objects. Adapters implement appropriate API for
    // the kinds of children that may be assigned to them. The stack represents execution state while the
    // antlr4 walker traverses it's internal AST. The root object (separate from the stack) will end up owning
    // the parsed query.
    std::stack<std::shared_ptr<Adapter>> _adapterStack;
    std::shared_ptr<RootAdapter> _rootAdapter;

    template<typename ParentAdapter, typename ChildAdapter, typename Context>
    std::shared_ptr<ChildAdapter> pushAdapterStack(Context * ctx);

    template<typename ChildAdapter>
    void popAdapterStack(antlr4::ParserRuleContext * ctx);

    template<typename ChildAdapter>
    std::shared_ptr<ChildAdapter> adapterStackTop() const;
};

}}} // namespace lsst::qserv::parser

#endif // LSST_QSERV_PARSER_MYSQLLISTENER_H
